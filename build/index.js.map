{"version":3,"file":"index.js","mappings":"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","sources":["webpack://my-first-block/external window \"React\"","webpack://my-first-block/external window [\"wp\",\"blocks\"]","webpack://my-first-block/external window [\"wp\",\"components\"]","webpack://my-first-block/external window [\"wp\",\"editor\"]","webpack://my-first-block/external window [\"wp\",\"i18n\"]","webpack://my-first-block/webpack/bootstrap","webpack://my-first-block/webpack/runtime/compat get default export","webpack://my-first-block/webpack/runtime/define property getters","webpack://my-first-block/webpack/runtime/hasOwnProperty shorthand","webpack://my-first-block/webpack/runtime/make namespace object","webpack://my-first-block/./src/index.js"],"sourcesContent":["module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"editor\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n* WordPress dependencies\n* @return void\n*/\nimport { __ } from '@wordpress/i18n';\nimport { registerBlockType } from '@wordpress/blocks';\nimport { Button, Modal, TextControl, RadioControl, Panel, PanelBody, SelectControl } from '@wordpress/components';\nimport { ToggleControl, IconButton, RangeControl } from '@wordpress/components';\nimport { MediaUpload, InspectorControls, PanelColorSettings } from '@wordpress/editor';\n//import VideoLightboxBlock from './VideoLightboxBlock';\n\n/**\n * Video Lightbox block registration\n */\nregisterBlockType('my-first-block/video-lightbox', {\n\ttitle: __('Video Lightbox'),\n    icon: 'video-alt3',\n    category: 'common',\n    attributes: {\n\t\t/** Image, Description, and VideoURL */\n\t\timage: {\n            type: 'string',\n            default: null,\n        },\n        selection: {\n            type: 'string',\n            default: 'button',\n        },\n\t\tbuttonText: {\n            type: 'string',\n            default: 'Button Text',\n        },\n        buttonBackgroundColor: {\n            type: 'string',\n            default: '#0073aa',\n        },\n\t\tbuttonTextColor: {\n            type: 'string',\n            default: '#ffffff',\n        },\n\t\timageSize: {\n            type: 'string',\n            default: 'full', // Default image size\n        },\n\t\t/** Enable Disable option for PlayIcon */\n\t\tadditionalSettingsEnabled: {\n            type: 'boolean',\n            default: false,\n        },\n\t\t/** Icon Image Upload Option Settings*/\n\t\ticonImage: {\n            type: 'string',\n            default: null,\n        },\n\t\t/** Icon Image Size Option Settings in pixels*/\n\t\ticonImageSize: {\n            type: 'string',\n            default: '30px', // Default icon size in pixels\n        },\n\t\t/** Video Lightbox Background color */\n\t\tvideoLightboxColor: {\n            type: 'string',\n            default: '#000000', // Default color for video lightbox\n        },\n\t\t/** Video Lightbox Opacity Option */\n        videoLightboxOpacity: {\n            type: 'number',\n            default: 0.8, // Default opacity for video lightbox\n        },\n\t\t/** Video Lightbox width Option */\n        videoLightboxWidth: {\n            type: 'number',\n            default: 640, // Default width for video lightbox\n        },\n\t\tvideoType: {\n            type: 'string',\n            default: null, // Default video type\n        },\n    },\n\n\n\t/**\n\t * Main Editor Structure\n\t * @param {*} props\n\t *\n\t * @returns void\n\t */\n\tedit: ({ attributes, setAttributes }) => {\n\n\t\tconst { useState } = wp.element;\n\t\tconst [errorMessage, setErrorMessage] = useState('');\n\t\tconst [errorMessagePlayIcon, setErrorMessagePlayIcon] = useState('');\n\t\tconst [errorMessageUploadVideo, setErrorMessageUploadVideo] = useState('');\n\n\t\t/** Constant values to contain default values */\n        const onSelectImage = (newImage) => {\n\t\t\tconsole.log(newImage.mime);\n\n\t\t\tif (newImage && (newImage.mime === 'image/jpeg' || newImage.mime === 'image/jpg' || newImage.mime === 'image/png' )) {\n\t\t        setAttributes({ image: newImage.sizes.full.url });\n\t\t        setErrorMessage('');\n\t\t    } else {\n\t\t        setErrorMessage('Invalid file type. Please select a JPG, JPEG or PNG file.');\n\t\t    }\n        };\n\n\t\t/** Remove Main Image */\n\t\tconst removeImage = () => {\n\t\t\tsetAttributes({ image: '' });\n\t\t};\n\n\t\tconst onSelectIcon = (newIcon) => {\n\t\t    if (newIcon && (newIcon.mime === 'image/jpeg' || newIcon.mime === 'image/jpg' || newIcon.mime === 'image/png' || newIcon.mime === 'image/svg+xml')) {\n\t\t        setAttributes({ iconImage: newIcon.url });\n\t\t        setErrorMessagePlayIcon('');\n\t\t    } else {\n\t\t        setErrorMessagePlayIcon('Invalid file type. Please select a JPG, PNG, or SVG file.');\n\t\t    }\n\t\t};\n\n\t\t/** Remove Play Icon */\n\t\tconst removeIcon = () => {\n\t\t    setAttributes({ iconImage: '' });\n\t\t};\n\n\n\n        const handleSelectionChange = (newSelection) => {\n            setAttributes({ selection: newSelection });\n        };\n\n\t\tconst handleTextChange = (newText) => {\n            setAttributes({ buttonText: newText });\n        };\n\n        const handleBackgroundColorChange = (color) => {\n            setAttributes({ buttonBackgroundColor: color });\n        };\n\n\t\tconst handleTextColorChange = (color) => {\n            setAttributes({ buttonTextColor: color });\n        };\n\n\t\tconst handleImageSizeChange = (newSize) => {\n            setAttributes({ imageSize: newSize });\n        };\n\n\t\tconst handleToggleChange = (checked) => {\n            setAttributes({ additionalSettingsEnabled: checked });\n        };\n\n\t\tconst handleIconSizeChange = (newSize) => {\n            setAttributes({ iconImageSize: newSize });\n        };\n\n\t\tconst handleColorChange = (color) => {\n            setAttributes({ videoLightboxColor: color });\n        };\n\n        const handleOpacityChange = (value) => {\n            setAttributes({ videoLightboxOpacity: value });\n        };\n\n        const handleWidthChange = (value) => {\n            setAttributes({ videoLightboxWidth: value });\n        };\n\n\t\tconst handleVideoTypeChange = (newType) => {\n        \tsetAttributes({ videoType: newType });\n\t    };\n\n\t    const handleVideoUrlChange = (newUrl) => {\n\t        setAttributes({ videoUrl: newUrl });\n\t    };\n\n\t\t/** Upload Video **/\n\t\tconst onUploadVideo = (newVideo) => {\n\t\t    if ( newVideo && ( newVideo.mime === 'video/mp4' )) {\n\t\t        setAttributes({ video: newVideo.url });\n\t\t        setErrorMessageUploadVideo('');\n\t\t    } else {\n\t\t        setErrorMessageUploadVideo('Invalid file type. Please upload mp4 file.');\n\t\t    }\n\t\t};\n\n\t\t/** Remove Upload Video */\n\t\tconst removeVideo = () => {\n\t\t    setAttributes({ video: '' });\n\t\t};\n\n\t\treturn (\n            <div>\n\t\t\t\t<RadioControl\n\t\t\t\t\tlabel={__('Select Option for Video Popup')}\n\t\t\t\t\tselected={attributes.selection}\n\t\t\t\t\toptions={[\n\t\t\t\t\t\t{ label: __('Button'), value: 'button' },\n\t\t\t\t\t\t{ label: __('Media Upload'), value: 'media' },\n\t\t\t\t\t]}\n\t\t\t\t\tonChange={handleSelectionChange}\n\t\t\t\t/>\n\n                <InspectorControls>\n\t\t\t\t\t<Panel>\n                    {attributes.selection === 'button' && (\n                        <PanelBody title={__('Button Settings')}>\n                            <TextControl\n                                label={__('Button Text')}\n                                value={attributes.buttonText}\n                                onChange={handleTextChange}\n                            />\n                            <PanelColorSettings\n                                title={__('Button Background Color')}\n                                colorSettings={[\n                                    {\n                                        value: attributes.buttonBackgroundColor,\n                                        onChange: handleBackgroundColorChange,\n                                        label: __('Select Button Background Color'),\n                                    },\n                                ]}\n                            />\n                            <PanelColorSettings\n                                title={__('Button Text Color')}\n                                colorSettings={[\n                                    {\n                                        value: attributes.buttonTextColor,\n                                        onChange: handleTextColorChange,\n                                        label: __('Select Button Text Color'),\n                                    },\n                                ]}\n                            />\n                        </PanelBody>\n                    )}\n\n\n                    {attributes.selection === 'media' && (\n\t\t\t\t\t\t<PanelBody title={__('Media Upload Settings')}>\n\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\tlabel={__('Play Icon')}\n\t\t\t\t\t\t\t\tchecked={attributes.additionalSettingsEnabled}\n\t\t\t\t\t\t\t\tonChange={handleToggleChange}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t{attributes.additionalSettingsEnabled && (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t{attributes.iconImage ? (\n\t\t\t\t\t\t\t            <div>\n\t\t\t\t\t\t\t                <img src={attributes.iconImage} alt=\"Uploaded Icon\" />\n\t\t\t\t\t\t\t                <Button onClick={removeIcon}>Remove</Button>\n\t\t\t\t\t\t\t            </div>\n\t\t\t\t\t\t\t        ) : (\n\t\t\t\t\t\t\t\t\t\t<MediaUpload\n\t                                        onSelect={onSelectIcon}\n\t                                        type=\"image\"\n\t                                        value={attributes.iconImage}\n\t\t\t\t\t\t\t\t\t\t\taccept=\"image/jpeg,image/jpg,image/png,image/svg+xml\"\n\t                                        render={({ open }) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t                        <IconButton\n\t\t\t\t\t\t\t                            icon=\"upload\"\n\t\t\t\t\t\t\t                            onClick={open}\n\t\t\t\t\t\t\t                            aria-label={__('Upload Icon')}\n\t\t\t\t\t\t\t                        />\n\t\t\t\t\t\t\t                        <span>{__('Upload Icon')}</span>\n\t\t\t\t\t\t\t                    </div>\n\t                                        )}\n\t                                    />\n\t\t\t\t\t\t\t        )}\n\n\t\t\t\t\t\t\t\t\t{errorMessagePlayIcon && <p style={{ color: 'red' }}>{errorMessagePlayIcon}</p>}\n\n                                </div>\n                            )}\n\n\t\t\t\t\t\t\t<TextControl\n                                label={__('Icon Size (in pixels)')}\n                                value={attributes.iconImageSize}\n                                onChange={handleIconSizeChange}\n                            />\n\n                            <SelectControl\n                                label={__('Select Image Size')}\n                                value={attributes.imageSize}\n                                options={[\n                                    { label: __('Thumbnail'), value: 'thumbnail' },\n                                    { label: __('Medium'), value: 'medium' },\n                                    { label: __('Large'), value: 'large' },\n                                    { label: __('Full'), value: 'full' },\n                                    // Add more size options as needed\n                                ]}\n                                onChange={handleImageSizeChange}\n                            />\n                        </PanelBody>\n                    )}\n\n\t\t\t\t\t<PanelBody title={__('Video Type Settings')}>\n                        <RadioControl\n                            label={__('Select Video Type')}\n                            selected={attributes.videoType}\n                            options={[\n                                { label: 'Upload Video', value: 'uploadvideo' },\n                                { label: 'Video Url', value: 'videourl' },\n                                // Add more options as needed\n                            ]}\n                            onChange={handleVideoTypeChange}\n                        />\n\n\t\t\t\t\t\t{attributes.videoType === 'videourl' && (\n\t                        <>\n\t                            <TextControl\n\t                                label={__('Video URL')}\n\t                                value={attributes.videoUrl}\n\t                                onChange={handleVideoUrlChange}\n\t                            />\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\n\n\t\t\t\t\t\t{ attributes.videoType === 'uploadvideo' && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{attributes.video ? (\n\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<video src={attributes.video}></video>\n\t\t\t\t\t\t\t\t<Button onClick={removeVideo}>Remove</Button>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<MediaUpload\n\t\t\t\t\t\t\t\t\tonSelect={onUploadVideo}\n\t\t\t\t\t\t\t\t\ttype=\"video\"\n\t\t\t\t\t\t\t\t\tvalue={attributes.video}\n\t\t\t\t\t\t\t\t\trender={({ open }) => (\n\t\t\t\t\t\t\t\t\t\t<Button onClick={open}>\n\t\t\t\t\t\t\t\t\t\t\t{__('Upload Video')}\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t{errorMessageUploadVideo && <p style={{ color: 'red' }}>{errorMessageUploadVideo}</p>}\n\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\n                    </PanelBody>\n\n\t\t\t\t\t<PanelBody title={__('Video Lightbox Settings')}>\n                        <PanelColorSettings\n                            title={__('Lightbox Color')}\n                            colorSettings={[\n                                {\n                                    value: attributes.videoLightboxColor,\n                                    onChange: handleColorChange,\n                                    label: __('Select Lightbox Color'),\n                                },\n                            ]}\n                        />\n                        <RangeControl\n                            label={__('Lightbox Opacity')}\n                            value={attributes.videoLightboxOpacity}\n                            onChange={handleOpacityChange}\n                            min={0}\n                            max={1}\n                            step={0.1}\n                        />\n                        <RangeControl\n                            label={__('Lightbox Width')}\n                            value={attributes.videoLightboxWidth}\n                            onChange={handleWidthChange}\n                            min={320}\n                            max={1920}\n                            step={10}\n                        />\n                    </PanelBody>\n\n\t\t\t\t\t</Panel>\n                </InspectorControls>\n\n\n                <div className=\"custom-block\">\n                    {attributes.selection === 'button' && (\n                        <Button\n                            onClick={() => setAttributes({ selection: 'button' })}\n                            style={{\n                                backgroundColor: attributes.buttonBackgroundColor,\n                                color: attributes.buttonTextColor,\n                            }}\n                        >\n                            {attributes.buttonText}\n                        </Button>\n                    )}\n\n                    {attributes.selection === 'media' && (\n\t\t\t\t\t\t<div>\n\n\t\t\t\t\t\t{attributes.image ? (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<img src={attributes.image} alt=\"Uploaded Icon\" />\n\t\t\t\t\t\t\t\t<Button onClick={removeImage}>Remove</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<MediaUpload\n\t                            onSelect={onSelectImage}\n\t                            type=\"image\"\n\t                            value={attributes.image}\n\t\t\t\t\t\t\t\taccept=\"image/jpeg,image/jpg,image/png\"\n\t                            render={({ open }) => (\n\t                                <Button onClick={open}>\n\t                                    {__('Upload Image')}\n\t                                </Button>\n\t                            )}\n\t                        />\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n\n\t\t\t\t\t\t</div>\n                    )}\n\n                </div>\n            </div>\n        );\n    },\n\n\t/**\n     * Main Save Structure\n     * @param {*} param0\n     * @returns\n     */\n    save: ({ attributes }) => {\n\t\t/** Get constant values contains values to save */\n\t\tconst { selection, buttonText, buttonBackgroundColor, buttonTextColor, videoType, videoUrl, video, iconImage, iconImageSize, imageSize } = attributes;\n\t\tconst buttonContent = buttonText.trim() !== '' ? buttonText : 'Open Video';\n\n        return (\n\t\t\t/** Structure to show for update data */\n            <section>\n\n\t\t\t\t{attributes.selection === 'button' && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<button data-fancybox=\"video-lightbox\"\n\t\t\t\t\t\t\tstyle={{ backgroundColor: buttonBackgroundColor }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t{buttonContent}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<div class=\"hidden\" >\n\t\t\t\t\t        <video src={video}></video>\n\t\t\t\t\t    </div>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\n                {attributes.image && (\n\t\t\t\t\t<a data-fancybox=\"video-lightbox\" href={video}>\n                    \t<img src={attributes.image} alt=\"Uploaded\" />\n\t\t\t\t\t\t<img style={{ width: iconImageSize }}\n\t\t\t\t\t\tsrc={attributes.iconImage} alt=\"IconImage\" />\n\n\t\t\t\t\t</a>\n                )}\n\n            </section>\n        );\n    },\n});\n"],"names":["__","registerBlockType","Button","Modal","TextControl","RadioControl","Panel","PanelBody","SelectControl","ToggleControl","IconButton","RangeControl","MediaUpload","InspectorControls","PanelColorSettings","title","icon","category","attributes","image","type","default","selection","buttonText","buttonBackgroundColor","buttonTextColor","imageSize","additionalSettingsEnabled","iconImage","iconImageSize","videoLightboxColor","videoLightboxOpacity","videoLightboxWidth","videoType","edit","setAttributes","useState","wp","element","errorMessage","setErrorMessage","errorMessagePlayIcon","setErrorMessagePlayIcon","errorMessageUploadVideo","setErrorMessageUploadVideo","onSelectImage","newImage","console","log","mime","sizes","full","url","removeImage","onSelectIcon","newIcon","removeIcon","handleSelectionChange","newSelection","handleTextChange","newText","handleBackgroundColorChange","color","handleTextColorChange","handleImageSizeChange","newSize","handleToggleChange","checked","handleIconSizeChange","handleColorChange","handleOpacityChange","value","handleWidthChange","handleVideoTypeChange","newType","handleVideoUrlChange","newUrl","videoUrl","onUploadVideo","newVideo","video","removeVideo","createElement","label","selected","options","onChange","colorSettings","src","alt","onClick","onSelect","accept","render","open","style","Fragment","min","max","step","className","backgroundColor","save","buttonContent","trim","class","href","width"],"sourceRoot":""}