{"version":3,"file":"index.js","mappings":"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","sources":["webpack://my-first-block/external window \"React\"","webpack://my-first-block/external window [\"wp\",\"blocks\"]","webpack://my-first-block/external window [\"wp\",\"components\"]","webpack://my-first-block/external window [\"wp\",\"editor\"]","webpack://my-first-block/external window [\"wp\",\"i18n\"]","webpack://my-first-block/webpack/bootstrap","webpack://my-first-block/webpack/runtime/compat get default export","webpack://my-first-block/webpack/runtime/define property getters","webpack://my-first-block/webpack/runtime/hasOwnProperty shorthand","webpack://my-first-block/webpack/runtime/make namespace object","webpack://my-first-block/./src/index.js"],"sourcesContent":["module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"editor\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n* WordPress dependencies\n* @return void\n*/\nimport { registerBlockType } from '@wordpress/blocks';\nimport { Button, Modal, TextControl, RadioControl, Panel, PanelBody, SelectControl, ToggleControl, IconButton, RangeControl } from '@wordpress/components';\nimport { MediaUpload, InspectorControls, PanelColorSettings } from '@wordpress/editor';\n//import VideoLightboxBlock from './VideoLightboxBlock';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Video Lightbox block registration\n */\nregisterBlockType('my-first-block/video-lightbox', {\n\ttitle: __('Video Lightbox'),\n    icon: 'video-alt3',\n    category: 'common',\n    attributes: {\n\t\t/** Image, Description, and VideoURL */\n\t\timage: {\n            type: 'string',\n            default: null,\n        },\n        selection: {\n            type: 'string',\n            default: 'button',\n        },\n\t\tbuttonText: {\n            type: 'string',\n            default: 'Button Text',\n        },\n        buttonBackgroundColor: {\n            type: 'string',\n            default: '#0073aa',\n        },\n\t\tbuttonTextColor: {\n            type: 'string',\n            default: '#ffffff',\n        },\n\t\timageSize: {\n            type: 'string',\n            default: 'full', // Default image size\n        },\n\t\t/** Enable Disable option for PlayIcon */\n\t\tadditionalSettingsEnabled: {\n            type: 'boolean',\n            default: false,\n        },\n\t\t/** Icon Image Upload Option Settings*/\n\t\ticonImage: {\n            type: 'string',\n            default: null,\n        },\n\t\t/** Icon Image Size Option Settings in pixels*/\n\t\ticonImageSize: {\n            type: 'string',\n            default: '30px', // Default icon size in pixels\n        },\n\t\t/** Video Lightbox Background color */\n\t\tvideoLightboxColor: {\n            type: 'string',\n            default: '#000000', // Default color for video lightbox\n        },\n\t\t/** Video Lightbox Opacity Option */\n        videoLightboxOpacity: {\n            type: 'number',\n            default: 0.8, // Default opacity for video lightbox\n        },\n\t\t/** Video Lightbox width Option */\n        videoLightboxWidth: {\n            type: 'number',\n            default: 640, // Default width for video lightbox\n        },\n\t\tvideoType: {\n            type: 'string',\n            default: null, // Default video type\n        },\n    },\n\tedit: ({ attributes, setAttributes }) => {\n        const onSelectImage = (newImage) => {\n            setAttributes({ image: newImage.sizes.full.url });\n        };\n\n\t\tconst onSelectIcon = (newIcon) => {\n            setAttributes({ iconImage: newIcon.sizes.full.url });\n        };\n\n        const handleSelectionChange = (newSelection) => {\n            setAttributes({ selection: newSelection });\n        };\n\n\t\tconst handleTextChange = (newText) => {\n            setAttributes({ buttonText: newText });\n        };\n\n        const handleBackgroundColorChange = (color) => {\n            setAttributes({ buttonBackgroundColor: color });\n        };\n\n\t\tconst handleTextColorChange = (color) => {\n            setAttributes({ buttonTextColor: color });\n        };\n\n\t\tconst handleImageSizeChange = (newSize) => {\n            setAttributes({ imageSize: newSize });\n        };\n\n\t\tconst handleToggleChange = (checked) => {\n            setAttributes({ additionalSettingsEnabled: checked });\n        };\n\n\t\tconst handleIconSizeChange = (newSize) => {\n            setAttributes({ iconImageSize: newSize });\n        };\n\n\t\tconst handleColorChange = (color) => {\n            setAttributes({ videoLightboxColor: color });\n        };\n\n        const handleOpacityChange = (value) => {\n            setAttributes({ videoLightboxOpacity: value });\n        };\n\n        const handleWidthChange = (value) => {\n            setAttributes({ videoLightboxWidth: value });\n        };\n\n\t\tconst handleVideoTypeChange = (newType) => {\n        \tsetAttributes({ videoType: newType });\n\t    };\n\n\t    const handleVideoUrlChange = (newUrl) => {\n\t        setAttributes({ videoUrl: newUrl });\n\t    };\n\n\t\treturn (\n            <div>\n\t\t\t\t<RadioControl\n\t\t\t\t\tlabel={__('Select Option for Video Popup')}\n\t\t\t\t\tselected={attributes.selection}\n\t\t\t\t\toptions={[\n\t\t\t\t\t\t{ label: __('Button'), value: 'button' },\n\t\t\t\t\t\t{ label: __('Media Upload'), value: 'media' },\n\t\t\t\t\t]}\n\t\t\t\t\tonChange={handleSelectionChange}\n\t\t\t\t/>\n                <InspectorControls>\n\t\t\t\t\t<Panel>\n                    {attributes.selection === 'button' && (\n                        <PanelBody title={__('Button Settings')}>\n                            <TextControl\n                                label={__('Button Text')}\n                                value={attributes.buttonText}\n                                onChange={handleTextChange}\n                            />\n                            <PanelColorSettings\n                                title={__('Button Background Color')}\n                                colorSettings={[\n                                    {\n                                        value: attributes.buttonBackgroundColor,\n                                        onChange: handleBackgroundColorChange,\n                                        label: __('Select Button Background Color'),\n                                    },\n                                ]}\n                            />\n                            <PanelColorSettings\n                                title={__('Button Text Color')}\n                                colorSettings={[\n                                    {\n                                        value: attributes.buttonTextColor,\n                                        onChange: handleTextColorChange,\n                                        label: __('Select Button Text Color'),\n                                    },\n                                ]}\n                            />\n                        </PanelBody>\n                    )}\n\n\n                    {attributes.selection === 'media' && (\n\t\t\t\t\t\t<PanelBody title={__('Media Upload Settings')}>\n\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\tlabel={__('Play Icon')}\n\t\t\t\t\t\t\t\tchecked={attributes.additionalSettingsEnabled}\n\t\t\t\t\t\t\t\tonChange={handleToggleChange}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t{attributes.additionalSettingsEnabled && (\n\t\t\t\t\t\t\t\t<div>\n                                    <MediaUpload\n                                        onSelect={onSelectIcon}\n                                        type=\"image\"\n                                        value={attributes.iconImage}\n                                        render={({ open }) => (\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t                        <IconButton\n\t\t\t\t\t\t                            icon=\"upload\"\n\t\t\t\t\t\t                            onClick={open}\n\t\t\t\t\t\t                            aria-label={__('Upload Icon')}\n\t\t\t\t\t\t                        />\n\t\t\t\t\t\t                        <span>{__('Upload Icon')}</span>\n\t\t\t\t\t\t                    </div>\n                                        )}\n                                    />\n                                    {attributes.iconImage && (\n                                        <img src={attributes.iconImage} alt=\"Icon Uploaded\" />\n                                    )}\n                                </div>\n                            )}\n\n\t\t\t\t\t\t\t<TextControl\n                                label={__('Icon Size (in pixels)')}\n                                value={attributes.iconImageSize}\n                                onChange={handleIconSizeChange}\n                            />\n\n                            <SelectControl\n                                label={__('Select Image Size')}\n                                value={attributes.imageSize}\n                                options={[\n                                    { label: __('Thumbnail'), value: 'thumbnail' },\n                                    { label: __('Medium'), value: 'medium' },\n                                    { label: __('Large'), value: 'large' },\n                                    { label: __('Full'), value: 'full' },\n                                    // Add more size options as needed\n                                ]}\n                                onChange={handleImageSizeChange}\n                            />\n                        </PanelBody>\n                    )}\n\n\t\t\t\t\t<PanelBody title={__('Video Type Settings')}>\n                        <RadioControl\n                            label={__('Select Video Type')}\n                            selected={attributes.videoType}\n                            options={[\n                                { label: 'Upload Video', value: 'uploadvideo' },\n                                { label: 'Video Url', value: 'videourl' },\n                                // Add more options as needed\n                            ]}\n                            onChange={handleVideoTypeChange}\n                        />\n\n\t\t\t\t\t\t{attributes.videoType === 'videourl' && (\n\t                        <>\n\t                            <TextControl\n\t                                label={__('Video URL')}\n\t                                value={attributes.videoUrl}\n\t                                onChange={handleVideoUrlChange}\n\t                            />\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{attributes.videoType === 'uploadvideo' && (\n\t                        <>\n\t                            <MediaUpload\n\t                                onSelect={(newVideo) => setAttributes({ video: newVideo.url })}\n\t                                type=\"video\"\n\t                                value={attributes.video}\n\t                                render={({ open }) => (\n\t                                    <Button onClick={open}>\n\t                                        {__('Upload Video')}\n\t                                    </Button>\n\t                                )}\n\t                            />\n\t                        </>\n\t                    )}\n                    </PanelBody>\n\n\t\t\t\t\t<PanelBody title={__('Video Lightbox Settings')}>\n                        <PanelColorSettings\n                            title={__('Lightbox Color')}\n                            colorSettings={[\n                                {\n                                    value: attributes.videoLightboxColor,\n                                    onChange: handleColorChange,\n                                    label: __('Select Lightbox Color'),\n                                },\n                            ]}\n                        />\n                        <RangeControl\n                            label={__('Lightbox Opacity')}\n                            value={attributes.videoLightboxOpacity}\n                            onChange={handleOpacityChange}\n                            min={0}\n                            max={1}\n                            step={0.1}\n                        />\n                        <RangeControl\n                            label={__('Lightbox Width')}\n                            value={attributes.videoLightboxWidth}\n                            onChange={handleWidthChange}\n                            min={320}\n                            max={1920}\n                            step={10}\n                        />\n                    </PanelBody>\n\n\t\t\t\t\t</Panel>\n                </InspectorControls>\n\n\n                <div className=\"custom-block\">\n                    {attributes.selection === 'button' && (\n                        <Button\n                            onClick={() => setAttributes({ selection: 'media' })}\n                            style={{\n                                backgroundColor: attributes.buttonBackgroundColor,\n                                color: attributes.buttonTextColor,\n                            }}\n                        >\n                            {attributes.buttonText}\n                        </Button>\n                    )}\n                    {attributes.selection === 'media' && (\n                        <MediaUpload\n                            onSelect={onSelectImage}\n                            type=\"image\"\n                            value={attributes.image}\n                            render={({ open }) => (\n                                <Button onClick={open}>\n                                    {__('Upload Image')}\n                                </Button>\n                            )}\n                        />\n                    )}\n                    {attributes.image && attributes.selection === 'media' && (\n                        <img src={attributes.image} alt=\"Uploaded\" />\n                    )}\n                </div>\n            </div>\n        );\n    },\n    save: ({ attributes }) => {\n\n\t\tconst { selection, buttonText, buttonBackgroundColor, buttonTextColor, videoType, videoUrl, iconImage, iconImageSize } = attributes;\n\t\tconst buttonContent = buttonText.trim() !== '' ? buttonText : 'Open Video';\n\n        return (\n\n            <div>\n\n\t\t\t\t{attributes.selection === 'button' && (\n\t\t\t\t\t<button data-fancybox=\"video-lightbox\"\n\t\t\t\t\t\tstyle={{ backgroundColor: buttonBackgroundColor }}\n\t\t\t\t\t>\n\t\t\t\t\t{buttonContent}\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\n                {attributes.image && (\n\t\t\t\t\t<a data-fancybox=\"video-lightbox\" href={videoUrl}>\n                    \t<img src={attributes.image} alt=\"Uploaded\" />\n\t\t\t\t\t\t<img style={{ width: iconImageSize }}\n\t\t\t\t\t\tsrc={attributes.iconImage} alt=\"IconImage\" />\n\n\t\t\t\t\t</a>\n                )}\n\n            </div>\n        );\n    },\n});\n"],"names":["registerBlockType","Button","Modal","TextControl","RadioControl","Panel","PanelBody","SelectControl","ToggleControl","IconButton","RangeControl","MediaUpload","InspectorControls","PanelColorSettings","__","title","icon","category","attributes","image","type","default","selection","buttonText","buttonBackgroundColor","buttonTextColor","imageSize","additionalSettingsEnabled","iconImage","iconImageSize","videoLightboxColor","videoLightboxOpacity","videoLightboxWidth","videoType","edit","setAttributes","onSelectImage","newImage","sizes","full","url","onSelectIcon","newIcon","handleSelectionChange","newSelection","handleTextChange","newText","handleBackgroundColorChange","color","handleTextColorChange","handleImageSizeChange","newSize","handleToggleChange","checked","handleIconSizeChange","handleColorChange","handleOpacityChange","value","handleWidthChange","handleVideoTypeChange","newType","handleVideoUrlChange","newUrl","videoUrl","createElement","label","selected","options","onChange","colorSettings","onSelect","render","open","onClick","src","alt","Fragment","newVideo","video","min","max","step","className","style","backgroundColor","save","buttonContent","trim","href","width"],"sourceRoot":""}