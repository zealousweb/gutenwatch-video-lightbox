{"version":3,"file":"index.js","mappings":"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","sources":["webpack://my-first-block/external window \"React\"","webpack://my-first-block/external window [\"wp\",\"blocks\"]","webpack://my-first-block/external window [\"wp\",\"components\"]","webpack://my-first-block/external window [\"wp\",\"data\"]","webpack://my-first-block/external window [\"wp\",\"editor\"]","webpack://my-first-block/external window [\"wp\",\"i18n\"]","webpack://my-first-block/webpack/bootstrap","webpack://my-first-block/webpack/runtime/compat get default export","webpack://my-first-block/webpack/runtime/define property getters","webpack://my-first-block/webpack/runtime/hasOwnProperty shorthand","webpack://my-first-block/webpack/runtime/make namespace object","webpack://my-first-block/./src/index.js"],"sourcesContent":["module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editor\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n* WordPress dependencies\r\n* @return void\r\n*/\r\nimport { __ } from '@wordpress/i18n';\r\nimport { registerBlockType } from '@wordpress/blocks';\r\nimport { Button, Modal, TextControl, RadioControl, Panel, PanelBody, SelectControl } from '@wordpress/components';\r\nimport { ToggleControl, IconButton, RangeControl } from '@wordpress/components';\r\nimport { MediaUpload, InspectorControls, PanelColorSettings } from '@wordpress/editor';\r\nimport { select } from '@wordpress/data';\r\nimport React, { useRef } from 'react';\r\n\r\n/**\r\n * Video Lightbox block registration\r\n */\r\nregisterBlockType('video-lightbox-block/video-lightbox', {\r\n\ttitle: __('Video Lightbox'),\r\n    icon: 'video-alt3',\r\n    category: 'video-lightbox-for-gutenberg',\r\n    attributes: {\r\n\t\t/** Image, Description, and VideoURL */\r\n\t\timage: {\r\n            type: 'string',\r\n            //default: [],\r\n        },\r\n        selection: {\r\n            type: 'string',\r\n            default: 'button',\r\n        },\r\n\t\tbuttonText: {\r\n            type: 'string',\r\n            default: 'Button Text',\r\n        },\r\n        buttonBackgroundColor: {\r\n            type: 'string',\r\n            default: '#0073aa',\r\n        },\r\n\t\tbuttonTextColor: {\r\n            type: 'string',\r\n            default: '#ffffff',\r\n        },\r\n\t\timageSize: {\r\n            type: 'string',\r\n            default: 'full', // Default image size\r\n        },\r\n\t\t/** Enable Disable option for PlayIcon */\r\n\t\tadditionalSettingsEnabled: {\r\n            type: 'boolean',\r\n            default: false,\r\n        },\r\n\t\t/** Icon Image Upload Option Settings*/\r\n\t\ticonImage: {\r\n            type: 'string',\r\n            default: null,\r\n        },\r\n\t\t/** Icon Image Size Option Settings in pixels*/\r\n\t\ticonImageSize: {\r\n            type: 'string',\r\n            default: '30px', // Default icon size in pixels\r\n        },\r\n\t\t/** Video Lightbox Background color */\r\n\t\tvideoLightboxColor: {\r\n            type: 'string',\r\n            default: '#000000', // Default color for video lightbox\r\n        },\r\n\t\t/** Video Lightbox Opacity Option */\r\n        videoLightboxOpacity: {\r\n            type: 'number',\r\n            default: 0.8, // Default opacity for video lightbox\r\n        },\r\n\t\t/** Video Lightbox width Option */\r\n        videoLightboxWidth: {\r\n            type: 'number',\r\n            default: 640, // Default width for video lightbox\r\n        },\r\n\t\tvideoType: {\r\n            type: 'string',\r\n            default: null, // Default video type\r\n        },\r\n        selectedSize: {\r\n            type: 'string',\r\n            default: 'medium',\r\n        }\r\n    },\r\n\r\n\r\n\t/**\r\n\t * Main Editor Structure\r\n\t * @param {*} props\r\n\t *\r\n\t * @returns void\r\n\t */\r\n\tedit: ({ attributes, setAttributes }) => {\r\n\r\n\t\tconst { useState } = wp.element;\r\n\t\tconst [errorMessage, setErrorMessage] = useState('');\r\n\t\tconst [errorMessagePlayIcon, setErrorMessagePlayIcon] = useState('');\r\n\t\tconst [errorMessageUploadVideo, setErrorMessageUploadVideo] = useState('');\r\n        const { selectedSize } = attributes;\r\n\r\n        /** get thumbnail image sizes from wordpress */\r\n        const imageSizes = select('core/editor').getEditorSettings().imageSizes.map((size) => size.slug);\r\n\r\n\t\t/** Constant values to contain default values */\r\n        const onSelectImage = (newImage) => {\r\n\t\t\tif (newImage && (newImage.mime === 'image/jpeg' || newImage.mime === 'image/jpg' || newImage.mime === 'image/png' )) {\r\n\t\t        setAttributes({ image: newImage });\r\n\t\t        setErrorMessage('');\r\n\t\t    } else {\r\n\t\t        setErrorMessage('Invalid file type. Please select a JPG, JPEG or PNG file.');\r\n\t\t    }\r\n        };\r\n\r\n\t\t/** Remove Main Image */\r\n\t\tconst removeImage = () => {\r\n\t\t\tsetAttributes({ image: '' });\r\n\t\t};\r\n\r\n\t\tconst onSelectIcon = (newIcon) => {\r\n\t\t    if (newIcon && (newIcon.mime === 'image/jpeg' || newIcon.mime === 'image/jpg' || newIcon.mime === 'image/png' || newIcon.mime === 'image/svg+xml')) {\r\n\t\t        setAttributes({ iconImage: newIcon.url });\r\n\t\t        setErrorMessagePlayIcon('');\r\n\t\t    } else {\r\n\t\t        setErrorMessagePlayIcon('Invalid file type. Please select a JPG, PNG, or SVG file.');\r\n\t\t    }\r\n\t\t};\r\n\r\n\t\t/** Remove Play Icon */\r\n\t\tconst removeIcon = () => {\r\n\t\t    setAttributes({ iconImage: '' });\r\n\t\t};\r\n\r\n        const handleSelectionChange = (newSelection) => {\r\n            setAttributes({ selection: newSelection });\r\n        };\r\n\r\n\t\tconst handleTextChange = (newText) => {\r\n            setAttributes({ buttonText: newText });\r\n        };\r\n\r\n        const handleBackgroundColorChange = (color) => {\r\n            setAttributes({ buttonBackgroundColor: color });\r\n        };\r\n\r\n\t\tconst handleTextColorChange = (color) => {\r\n            setAttributes({ buttonTextColor: color });\r\n        };\r\n\r\n\t\tconst handleImageSizeChange = (newSize) => {\r\n            setAttributes({ imageSize: newSize });\r\n        };\r\n\r\n\t\tconst handleToggleChange = (checked) => {\r\n            setAttributes({ additionalSettingsEnabled: checked });\r\n        };\r\n\r\n\t\tconst handleIconSizeChange = (newSize) => {\r\n            setAttributes({ iconImageSize: newSize });\r\n        };\r\n\r\n\t\tconst handleColorChange = (color) => {\r\n            setAttributes({ videoLightboxColor: color });\r\n        };\r\n\r\n        const handleOpacityChange = (value) => {\r\n            setAttributes({ videoLightboxOpacity: value });\r\n        };\r\n\r\n        const handleWidthChange = (value) => {\r\n            setAttributes({ videoLightboxWidth: value });\r\n        };\r\n\r\n\t\tconst handleVideoTypeChange = (newType) => {\r\n        \tsetAttributes({ videoType: newType });\r\n\t    };\r\n\r\n\t    const handleVideoUrlChange = (newUrl) => {\r\n\t        setAttributes({ videoUrl: newUrl });\r\n\t    };\r\n\r\n\t\t/** Upload Video **/\r\n\t\tconst onUploadVideo = (newVideo) => {\r\n\t\t    if ( newVideo && ( newVideo.mime === 'video/mp4' )) {\r\n\t\t        setAttributes({ video: newVideo.url });\r\n\t\t        setErrorMessageUploadVideo('');\r\n\t\t    } else {\r\n\t\t        setErrorMessageUploadVideo('Invalid file type. Please upload mp4 file.');\r\n\t\t    }\r\n\t\t};\r\n\r\n\t\t/** Remove Upload Video */\r\n\t\tconst removeVideo = () => {\r\n\t\t    setAttributes({ video: '' });\r\n\t\t};\r\n\r\n\t\treturn (\r\n\r\n            <div class=\"\">\r\n\r\n\t\t\t\t<RadioControl\r\n\t\t\t\t\tlabel={__('Select Option for Video Popup')}\r\n\t\t\t\t\tselected={attributes.selection}\r\n\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t{ label: __('Button'), value: 'button' },\r\n\t\t\t\t\t\t{ label: __('Media Upload'), value: 'media' },\r\n\t\t\t\t\t]}\r\n\t\t\t\t\tonChange={handleSelectionChange}\r\n\t\t\t\t/>\r\n\r\n                <InspectorControls>\r\n\t\t\t\t\t<Panel>\r\n\r\n                    {attributes.selection === 'button' && (\r\n                        <PanelBody title={__('Button Settings')}>\r\n                            <TextControl\r\n                                label={__('Button Text')}\r\n                                value={attributes.buttonText}\r\n                                onChange={handleTextChange}\r\n                            />\r\n                            <PanelColorSettings\r\n                                title={__('Button Background Color')}\r\n                                colorSettings={[\r\n                                    {\r\n                                        value: attributes.buttonBackgroundColor,\r\n                                        onChange: handleBackgroundColorChange,\r\n                                        label: __('Select Button Background Color'),\r\n                                    },\r\n                                ]}\r\n                            />\r\n                            <PanelColorSettings\r\n                                title={__('Button Text Color')}\r\n                                colorSettings={[\r\n                                    {\r\n                                        value: attributes.buttonTextColor,\r\n                                        onChange: handleTextColorChange,\r\n                                        label: __('Select Button Text Color'),\r\n                                    },\r\n                                ]}\r\n                            />\r\n                        </PanelBody>\r\n                    )}\r\n\r\n                    {attributes.selection === 'media' && (\r\n\t\t\t\t\t\t<PanelBody title={__('Media Upload Settings')}>\r\n\t\t\t\t\t\t\t<ToggleControl\r\n\t\t\t\t\t\t\t\tlabel={__('Play Icon')}\r\n\t\t\t\t\t\t\t\tchecked={attributes.additionalSettingsEnabled}\r\n\t\t\t\t\t\t\t\tonChange={handleToggleChange}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t{attributes.additionalSettingsEnabled && (\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t{attributes.iconImage ? (\r\n\t\t\t\t\t\t\t            <div>\r\n\t\t\t\t\t\t\t                <img src={attributes.iconImage} alt=\"Uploaded Icon\" />\r\n\t\t\t\t\t\t\t                <Button onClick={removeIcon}>Remove</Button>\r\n\t\t\t\t\t\t\t            </div>\r\n\t\t\t\t\t\t\t        ) : (\r\n\t\t\t\t\t\t\t\t\t\t<MediaUpload\r\n\t                                        onSelect={onSelectIcon}\r\n\t                                        type=\"image\"\r\n\t                                        value={attributes.iconImage}\r\n\t\t\t\t\t\t\t\t\t\t\taccept=\"image/jpeg,image/jpg,image/png,image/svg+xml\"\r\n\t                                        render={({ open }) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t                        <IconButton\r\n\t\t\t\t\t\t\t                            icon=\"upload\"\r\n\t\t\t\t\t\t\t                            onClick={open}\r\n\t\t\t\t\t\t\t                            aria-label={__('Upload Icon')}\r\n\t\t\t\t\t\t\t                        />\r\n\t\t\t\t\t\t\t                        <span>{__('Upload Icon')}</span>\r\n\t\t\t\t\t\t\t                    </div>\r\n\t                                        )}\r\n\t                                    />\r\n\t\t\t\t\t\t\t        )}\r\n\r\n\t\t\t\t\t\t\t\t\t{errorMessagePlayIcon && <p style={{ color: 'red' }}>{errorMessagePlayIcon}</p>}\r\n\r\n                                </div>\r\n                            )}\r\n\r\n\t\t\t\t\t\t\t<TextControl\r\n                                label={__('Icon Size (in pixels)')}\r\n                                value={attributes.iconImageSize}\r\n                                onChange={handleIconSizeChange}\r\n                            />\r\n\r\n                                <SelectControl\r\n                                    label=\"Select Image Size\"\r\n                                    value={selectedSize}\r\n                                    options={imageSizes.map((size) => ({ label: size, value: size }))}\r\n                                    //onChange={(onSelectImageSize) => setSize(onSelectImageSize)}\r\n                                    //onChange={handleSizeChange}\r\n                                    onChange={(newSelectedSize) => setAttributes({ selectedSize: newSelectedSize })}\r\n                                />\r\n\r\n                            {/**\r\n                             * <SelectControl\r\n                                label={__('Select Image Size')}\r\n                                value={attributes.imageSize}\r\n                                options={[\r\n                                    { label: __('Thumbnail'), value: 'thumbnail' },\r\n                                    { label: __('Medium'), value: 'medium' },\r\n                                    { label: __('Large'), value: 'large' },\r\n                                    { label: __('Full'), value: 'full' },\r\n                                    // Add more size options as needed\r\n                                ]}\r\n                                onChange={handleImageSizeChange}\r\n                            />\r\n                             */}\r\n                        </PanelBody>\r\n                    )}\r\n\r\n\t\t\t\t\t<PanelBody title={__('Video Type Settings')}>\r\n                        <RadioControl\r\n                            label={__('Select Video Type')}\r\n                            selected={attributes.videoType}\r\n                            options={[\r\n                                { label: 'Upload Video', value: 'uploadvideo' },\r\n                                { label: 'Video Url', value: 'videourl' },\r\n                                // Add more options as needed\r\n                            ]}\r\n                            onChange={handleVideoTypeChange}\r\n                        />\r\n\r\n\t\t\t\t\t\t{attributes.videoType === 'videourl' && (\r\n\t                        <>\r\n\t                            <TextControl\r\n\t                                label={__('Video URL')}\r\n\t                                value={attributes.videoUrl}\r\n\t                                onChange={handleVideoUrlChange}\r\n\t                            />\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{ attributes.videoType === 'uploadvideo' && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t{attributes.video ? (\r\n\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<video src={attributes.video}></video>\r\n\t\t\t\t\t\t\t\t<Button onClick={removeVideo}>Remove</Button>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<MediaUpload\r\n\t\t\t\t\t\t\t\t\tonSelect={onUploadVideo}\r\n\t\t\t\t\t\t\t\t\ttype=\"video\"\r\n\t\t\t\t\t\t\t\t\tvalue={attributes.video}\r\n\t\t\t\t\t\t\t\t\trender={({ open }) => (\r\n\t\t\t\t\t\t\t\t\t\t<Button onClick={open}>\r\n\t\t\t\t\t\t\t\t\t\t\t{__('Upload Video')}\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t{errorMessageUploadVideo && <p style={{ color: 'red' }}>{errorMessageUploadVideo}</p>}\r\n\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\r\n                    </PanelBody>\r\n\r\n\t\t\t\t\t<PanelBody title={__('Video Lightbox Settings')}>\r\n                        <PanelColorSettings\r\n                            title={__('Lightbox Color')}\r\n                            colorSettings={[\r\n                                {\r\n                                    value: attributes.videoLightboxColor,\r\n                                    onChange: handleColorChange,\r\n                                    label: __('Select Lightbox Color'),\r\n                                },\r\n                            ]}\r\n                        />\r\n                        <RangeControl\r\n                            label={__('Lightbox Opacity')}\r\n                            value={attributes.videoLightboxOpacity}\r\n                            onChange={handleOpacityChange}\r\n                            min={0}\r\n                            max={1}\r\n                            step={0.1}\r\n                        />\r\n                        <RangeControl\r\n                            label={__('Lightbox Width')}\r\n                            value={attributes.videoLightboxWidth}\r\n                            onChange={handleWidthChange}\r\n                            min={320}\r\n                            max={1920}\r\n                            step={10}\r\n                        />\r\n                    </PanelBody>\r\n\r\n\t\t\t\t\t</Panel>\r\n                </InspectorControls>\r\n\r\n                <div className=\"custom-block\">\r\n                    {attributes.selection === 'button' && (\r\n                        <Button\r\n                            onClick={() => setAttributes({ selection: 'button' })}\r\n                            style={{\r\n                                backgroundColor: attributes.buttonBackgroundColor,\r\n                                color: attributes.buttonTextColor,\r\n                            }}\r\n                        >\r\n                            {attributes.buttonText}\r\n                        </Button>\r\n                    )}\r\n\r\n                    {attributes.selection === 'media' && (\r\n\t\t\t\t\t\t<div>\r\n\r\n\t\t\t\t\t\t{attributes.image ? (\r\n\t\t\t\t\t\t\t<div>\r\n                                <img src={attributes.image.sizes[selectedSize].url} alt={(attributes.image.alt ? attributes.image.alt : '')} /> \r\n\t\t\t\t\t\t\t\t<Button onClick={removeImage}>Remove</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<MediaUpload\r\n\t                            onSelect={onSelectImage}\r\n\t                            type=\"image\"\r\n                                value={attributes.image && attributes.image.id}\r\n\t\t\t\t\t\t\t\taccept=\"image/jpeg,image/jpg,image/png\"\r\n\t                            render={({ open }) => (\r\n\t                                <Button onClick={open}>\r\n\t                                    {__('Upload Image')}\r\n\t                                </Button>\r\n\t                            )}\r\n\t                        />\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n\r\n\t\t\t\t\t\t</div>\r\n                    )}\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    },\r\n\r\n\t/**\r\n     * Main Save Structure\r\n     * @param {*} param0\r\n     * @returns\r\n     */\r\n    save: ({ attributes }) => {\r\n\t\t/** Get constant values contains values to save */\r\n\t\tconst { selection, buttonText, buttonBackgroundColor, buttonTextColor, videoType, videoUrl, video, iconImage, iconImageSize, imageSize } = attributes;\r\n\t\tconst buttonContent = buttonText.trim() !== '' ? buttonText : 'Open Video';\r\n        const {selectedSize} = attributes\r\n\t\t//const videoContent = videoUrl != '' ? videoUrl : video;\r\n\r\n        return (\r\n\t\t\t/** Structure to show for update data */\r\n            <section class=\"\">\r\n\r\n\t\t\t\t{attributes.selection === 'button' && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<button data-fancybox=\"video-lightbox\"\r\n\t\t\t\t\t\t\tstyle={{ backgroundColor: buttonBackgroundColor }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t{buttonContent}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<div class=\"hidden\" >\r\n\t\t\t\t\t        <video src={video}></video>\r\n\t\t\t\t\t    </div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n                {attributes.image && (\r\n\r\n\t\t\t\t\t<a data-fancybox=\"video-lightbox\" href={video}>\r\n                        <img src={attributes.image.sizes[selectedSize].url} alt={(attributes.image.alt ? attributes.image.alt : '')} />\r\n\t\t\t\t\t</a>\r\n                )}\r\n\r\n            </section>\r\n        );\r\n    },\r\n});\r\n"],"names":["__","registerBlockType","Button","Modal","TextControl","RadioControl","Panel","PanelBody","SelectControl","ToggleControl","IconButton","RangeControl","MediaUpload","InspectorControls","PanelColorSettings","select","React","useRef","title","icon","category","attributes","image","type","selection","default","buttonText","buttonBackgroundColor","buttonTextColor","imageSize","additionalSettingsEnabled","iconImage","iconImageSize","videoLightboxColor","videoLightboxOpacity","videoLightboxWidth","videoType","selectedSize","edit","setAttributes","useState","wp","element","errorMessage","setErrorMessage","errorMessagePlayIcon","setErrorMessagePlayIcon","errorMessageUploadVideo","setErrorMessageUploadVideo","imageSizes","getEditorSettings","map","size","slug","onSelectImage","newImage","mime","removeImage","onSelectIcon","newIcon","url","removeIcon","handleSelectionChange","newSelection","handleTextChange","newText","handleBackgroundColorChange","color","handleTextColorChange","handleImageSizeChange","newSize","handleToggleChange","checked","handleIconSizeChange","handleColorChange","handleOpacityChange","value","handleWidthChange","handleVideoTypeChange","newType","handleVideoUrlChange","newUrl","videoUrl","onUploadVideo","newVideo","video","removeVideo","createElement","class","label","selected","options","onChange","colorSettings","src","alt","onClick","onSelect","accept","render","open","style","newSelectedSize","Fragment","min","max","step","className","backgroundColor","sizes","id","save","buttonContent","trim","href"],"sourceRoot":""}