{"version":3,"file":"index.js","mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,oBAAoB;AACtC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAsB;;;;;;;;;;ACnNT;;AAEb,8CAA6C;AAC7C;AACA,CAAC,EAAC;AACF,kBAAe;;AAEf,wBAAwB,2BAA2B,2EAA2E,kCAAkC,wBAAwB,OAAO,kCAAkC,mIAAmI;;AAEpW;AACA;;AAEA;AACA;;AAEA,6CAA6C;AAC7C;AACA;AACA;;AAEA;AACA,yBAAsB;;;;;;;;;;ACrBT;;AAEb,8CAA6C;AAC7C;AACA,CAAC,EAAC;AACF,kBAAe;;AAEf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAsB;;;;;;;;;;ACrBtB;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEjDA;UACA;UACA;UACA;UACA","sources":["webpack://my-first-block/./src/index.js","webpack://my-first-block/./src/editor.scss","webpack://my-first-block/./src/style.scss","webpack://my-first-block/./node_modules/validator/lib/isFQDN.js","webpack://my-first-block/./node_modules/validator/lib/isIP.js","webpack://my-first-block/./node_modules/validator/lib/isURL.js","webpack://my-first-block/./node_modules/validator/lib/util/assertString.js","webpack://my-first-block/./node_modules/validator/lib/util/merge.js","webpack://my-first-block/external window \"React\"","webpack://my-first-block/external window [\"wp\",\"blockEditor\"]","webpack://my-first-block/external window [\"wp\",\"blocks\"]","webpack://my-first-block/external window [\"wp\",\"components\"]","webpack://my-first-block/external window [\"wp\",\"data\"]","webpack://my-first-block/external window [\"wp\",\"i18n\"]","webpack://my-first-block/external window [\"wp\",\"notices\"]","webpack://my-first-block/webpack/bootstrap","webpack://my-first-block/webpack/runtime/chunk loaded","webpack://my-first-block/webpack/runtime/compat get default export","webpack://my-first-block/webpack/runtime/define property getters","webpack://my-first-block/webpack/runtime/hasOwnProperty shorthand","webpack://my-first-block/webpack/runtime/make namespace object","webpack://my-first-block/webpack/runtime/jsonp chunk loading","webpack://my-first-block/webpack/before-startup","webpack://my-first-block/webpack/startup","webpack://my-first-block/webpack/after-startup"],"sourcesContent":["/**\r\n* WordPress dependencies\r\n* @return void\r\n*/\r\nimport { __ } from '@wordpress/i18n';\r\nimport { MediaUploadCheck, MediaUpload, InspectorControls, PanelColorSettings, useBlockProps } from '@wordpress/block-editor';\r\nimport { registerBlockType } from '@wordpress/blocks';\r\nimport { Button, TextControl, RadioControl, Panel, PanelBody, SelectControl, ToggleControl, IconButton, RangeControl } from '@wordpress/components';\r\nimport { select } from '@wordpress/data';\r\nimport React, { useRef } from 'react';\r\nimport isURL from 'validator/lib/isURL';\r\nimport { createErrorNotice } from '@wordpress/notices';\r\nimport { withDispatch } from '@wordpress/data';\r\n\r\n\r\nimport './style.scss';\r\nimport './editor.scss';\r\n\r\n/**\r\n * Video Lightbox block registration\r\n */\r\nregisterBlockType('video-lightbox-block/video-lightbox', {\r\n    title: __('Video Lightbox'),\r\n    icon: 'video-alt3',\r\n    category: 'zealblocks',\r\n    attributes: {\r\n        /** Image, Description, and VideoURL */\r\n        image: {\r\n            type: 'object',\r\n            default: null,\r\n        },\r\n        selection: {\r\n            type: 'string',\r\n            default: 'button',\r\n        },\r\n        buttonText: {\r\n            type: 'string',\r\n            default: 'Button Text',\r\n        },\r\n        buttonBackgroundColor: {\r\n            type: 'string',\r\n            default: '#0073aa',\r\n        },\r\n        buttonTextColor: {\r\n            type: 'string',\r\n            default: '#ffffff',\r\n        },\r\n        buttonBorderColor: {\r\n            type: 'string',\r\n            default: '#0073aa',\r\n        },\r\n        buttonBackgroundHoverColor: {\r\n            type: 'string',\r\n            default: '#0073aa',\r\n        },\r\n        buttonTextHoverColor: {\r\n            type: 'string',\r\n            default: '#ffffff',\r\n        },\r\n        buttonBorderHoverColor: {\r\n            type: 'string',\r\n            default: '#0073aa',\r\n        },\r\n        buttonBorderWidth: {\r\n            type: 'number',\r\n            default: 0, // Default opacity for video lightbox\r\n        },\r\n        \r\n        imageSize: {\r\n            type: 'string',\r\n            default: 'full', // Default image size\r\n        },\r\n        /** Enable Disable option for PlayIcon */\r\n        additionalSettingsEnabled: {\r\n            type: 'boolean',\r\n            default: false,\r\n        },\r\n        /** Icon Image Upload Option Settings*/\r\n        iconImage: {\r\n            type: 'string',\r\n            default: null,\r\n        },\r\n        /** Icon Image Size Option Settings in pixels*/\r\n        iconImageSize: {\r\n            type: 'string',\r\n            default: '30px', // Default icon size in pixels\r\n        },\r\n        /** Video Lightbox Background color */\r\n        videoLightboxColor: {\r\n            type: 'string',\r\n            default: '#000000', // Default color for video lightbox\r\n        },\r\n        /** Video Lightbox Opacity Option */\r\n        videoLightboxOpacity: {\r\n            type: 'number',\r\n            default: 0.8, // Default opacity for video lightbox\r\n        },\r\n        /** Video Lightbox width Option */\r\n        videoLightboxWidth: {\r\n            type: 'number',\r\n            default: 640, // Default width for video lightbox\r\n        },\r\n        videoType: {\r\n            type: 'string',\r\n            default: null, // Default video type\r\n        },\r\n        selectedSize: {\r\n            type: 'string',\r\n            default: 'thumbnail',\r\n        },\r\n        videoUrl: {\r\n            type: 'string',\r\n            default: null, // Default video type\r\n        },\r\n        video: {\r\n            type: 'string',\r\n            default: null, // Default video type\r\n        },\r\n    },\r\n\r\n\r\n    /**\r\n     * Main Editor Structure\r\n     * @param {*} props\r\n     *\r\n     * @returns void\r\n     */\r\n    edit: ({ attributes, setAttributes, noticeOperations }) => {\r\n\r\n        const { useState } = wp.element;\r\n        const [errorMessage, setErrorMessage] = useState('');\r\n        const [errorMessagePlayIcon, setErrorMessagePlayIcon] = useState('');\r\n        const [errorMessageUploadVideo, setErrorMessageUploadVideo] = useState('');\r\n        const { selectedSize } = attributes;\r\n        const { video } = attributes;\r\n        const { image } = attributes;\r\n        const [val, setVal] = useState('');\r\n        const [err, setErr] = useState('');\r\n        const { buttonBorderWidth, buttonBorderColor, buttonBorderHoverColor, buttonBackgroundColor, buttonBackgroundHoverColor, buttonTextColor, buttonTextHoverColor,  } = attributes;\r\n\r\n        console.log(selectedSize);\r\n\r\n        /** get thumbnail image sizes from wordpress */\r\n        const imageSizes = select('core/editor').getEditorSettings().imageSizes.map((size) => size.slug);\r\n\r\n        /** Constant values to contain default values */\r\n        const onSelectImage = (image) => {\r\n            console.log(image);\r\n            if (image && (image.mime === 'image/jpeg' || image.mime === 'image/jpg' || image.mime === 'image/png')) {\r\n                setAttributes({\r\n                    image: image,\r\n                    //image_url: image.sizes[selectedSize].url\r\n                });\r\n                setErrorMessage('');\r\n            } else {\r\n                setErrorMessage('Invalid file type. Please select a JPG, JPEG or PNG file.');\r\n            }\r\n        };\r\n\r\n        //         const updateRepeaterItem = (image, image_caption, selectedVideoType, video_media, popup_url, index) => {\r\n        // \r\n        //             const newItems = [...attributes.items];\r\n        //             newItems[index].image = image;\r\n        //             newItems[index].image_caption = image_caption;\r\n        //             newItems[index].selectedVideoType = selectedVideoType;\r\n        //             newItems[index].video_media = video_media;\r\n        //             newItems[index].popup_url = popup_url;\r\n        //             setAttributes({ items: newItems });\r\n        //             console.log(image);\r\n        //         };\r\n\r\n        /** Remove Main Image */\r\n        const removeImage = () => {\r\n            setAttributes({ image: '' });\r\n        };\r\n\r\n        const onSelectIcon = (newIcon) => {\r\n            if (newIcon && (newIcon.mime === 'image/jpeg' || newIcon.mime === 'image/jpg' || newIcon.mime === 'image/png' || newIcon.mime === 'image/svg+xml')) {\r\n                setAttributes({ iconImage: newIcon.url });\r\n                setErrorMessagePlayIcon('');\r\n            } else {\r\n                setErrorMessagePlayIcon('Invalid file type. Please select a JPG, PNG, or SVG file.');\r\n            }\r\n        };\r\n\r\n        /** Remove Play Icon */\r\n        const removeIcon = () => {\r\n            setAttributes({ iconImage: '' });\r\n        };\r\n\r\n        const handleSelectionChange = (newSelection) => {\r\n            setAttributes({ selection: newSelection });\r\n        };\r\n\r\n        const handleTextChange = (newText) => {\r\n            setAttributes({ buttonText: newText });\r\n        };\r\n\r\n        const handleBackgroundColorChange = (color) => {\r\n            setAttributes({ buttonBackgroundColor: color });\r\n        };\r\n\r\n        const handleTextColorChange = (color) => {\r\n            setAttributes({ buttonTextColor: color });\r\n        };\r\n\r\n        const handleBorderColorChange = (color) => {\r\n            setAttributes({ buttonBorderColor: color });\r\n        };\r\n\r\n        const handleBackgroundHoverColorChange = (color) => {\r\n            setAttributes({ buttonBackgroundHoverColor: color });\r\n        };\r\n\r\n        const handleTextHoverColorChange = (color) => {\r\n            setAttributes({ buttonTextHoverColor: color });\r\n        };\r\n\r\n        const handleBorderHoverColorChange = (color) => {\r\n            setAttributes({ buttonBorderHoverColor: color });\r\n        };\r\n\r\n        \r\n\r\n        const handleButtonBorderWidth = (value) => {\r\n            setAttributes({ buttonBorderWidth: value });\r\n        };\r\n\r\n        const handleImageSizeChange = (newSize) => {\r\n            setAttributes({ imageSize: newSize });\r\n        };\r\n\r\n        const handleToggleChange = (checked) => {\r\n            setAttributes({ additionalSettingsEnabled: checked });\r\n        };\r\n\r\n        const handleIconSizeChange = (newSize) => {\r\n            setAttributes({ iconImageSize: newSize });\r\n        };\r\n\r\n        const handleColorChange = (color) => {\r\n            setAttributes({ videoLightboxColor: color });\r\n        };\r\n\r\n        const handleOpacityChange = (value) => {\r\n            setAttributes({ videoLightboxOpacity: value });\r\n        };\r\n\r\n        \r\n\r\n        const handleWidthChange = (value) => {\r\n            setAttributes({ videoLightboxWidth: value });\r\n        };\r\n\r\n        const handleVideoTypeChange = (newType) => {\r\n            setAttributes({ videoType: newType });\r\n        };\r\n\r\n        const handleVideoUrlChange = (newUrl) => {\r\n            setAttributes({ videoUrl: newUrl });\r\n        };\r\n\r\n        const validate = (newUrl) => {\r\n            console.log(newUrl);\r\n            setVal(newUrl);\r\n            if (isURL(newUrl)) {\r\n                setErr('Valid URL');\r\n                setAttributes({ videoUrl: newUrl });\r\n            } else {\r\n                setErr('Invalid URL');\r\n            }\r\n        };\r\n\r\n        /** Upload Video **/\r\n        const onUploadVideo = (newVideo) => {\r\n            if (newVideo && (newVideo.mime === 'video/mp4')) {\r\n                setAttributes({ video: newVideo.url });\r\n                setErrorMessageUploadVideo('');\r\n            } else {\r\n                setErrorMessageUploadVideo('Invalid file type. Please upload mp4 file.');\r\n            }\r\n        };\r\n\r\n        /** Remove Upload Video */\r\n        const removeVideo = () => {\r\n            setAttributes({ video: '' });\r\n        };\r\n\r\n        const saveBlock = () => {\r\n            if (!caption) {\r\n                const errorMessage = 'Caption is required!';\r\n                const notice = createErrorNotice(errorMessage, {\r\n                    type: 'block',\r\n                    isDismissible: true,\r\n                });\r\n                noticeOperations.createNotice(notice);\r\n                return;\r\n            }\r\n\r\n            // Proceed with saving the block\r\n            // ...\r\n        };\r\n\r\n        const customStyles = `\r\n      .button-open-vl {\r\n        background-color: ${buttonBackgroundColor};\r\n        color: ${buttonTextColor};\r\n        border: ${buttonBorderWidth}px solid ${buttonBorderColor};\r\n      }\r\n      .button-open-vl:hover {\r\n        background-color: ${buttonBackgroundHoverColor};\r\n        color: ${buttonTextHoverColor};\r\n        border: ${buttonBorderWidth}px solid ${buttonBorderHoverColor};\r\n      }\r\n      /* Add more styles as needed */\r\n    `;\r\n        \r\n\r\n        // Enhance the component with withDispatch to access dispatch functions\r\n        // const MyMediaBlockWithDispatch = withDispatch((dispatch) => {\r\n        //     return {\r\n        //         noticeOperations: dispatch('core/notices'),\r\n        //     };\r\n        // })(MyMediaBlock);\r\n\r\n\r\n        return (\r\n\r\n            <div className=\"video-lightbox\">\r\n                {\r\n                    <style>\r\n                        {customStyles}\r\n                    </style>\r\n                }\r\n                <div className=\"video-lb-notes\">\r\n                    <h2>{__('Select Option for Video Popup', 'videolightboxforgutenberg')}</h2>\r\n                    <p>* Please find Video upload, and customization options in sidebar</p>\r\n                </div>\r\n                <RadioControl\r\n                    //label={__('Select Option for Video Popup')}\r\n                    selected={attributes.selection}\r\n                    options={[\r\n                        { label: __('Button', 'videolightboxforgutenberg'), value: 'button' },\r\n                        { label: __('Media Upload', 'videolightboxforgutenberg'), value: 'media' },\r\n                    ]}\r\n                    onChange={handleSelectionChange}\r\n                />\r\n\r\n                <InspectorControls>\r\n                    <Panel>\r\n\r\n                        {attributes.selection === 'button' && (\r\n                            <PanelBody title={__('Button Settings', 'videolightboxforgutenberg')}>\r\n                                <TextControl\r\n                                    label={__('Button Text', 'videolightboxforgutenberg')}\r\n                                    value={attributes.buttonText}\r\n                                    onChange={handleTextChange}\r\n                                />\r\n                                <RangeControl\r\n                                    label={__('Button Border Width', 'videolightboxforgutenberg')}\r\n                                    value={attributes.buttonBorderWidth}\r\n                                    onChange={handleButtonBorderWidth}\r\n                                    min={0}\r\n                                    max={2}\r\n                                    step={1}\r\n                                />\r\n                                <PanelColorSettings\r\n                                    title={__('Button Design', 'videolightboxforgutenberg')}\r\n                                    colorSettings={[\r\n                                        {\r\n                                            value: attributes.buttonBackgroundColor,\r\n                                            onChange: handleBackgroundColorChange,\r\n                                            label: __('Background Color', 'videolightboxforgutenberg'),\r\n                                        },\r\n                                        {\r\n                                            value: attributes.buttonTextColor,\r\n                                            onChange: handleTextColorChange,\r\n                                            label: __('Text Color', 'videolightboxforgutenberg'),\r\n                                        },\r\n                                        {\r\n                                            value: attributes.buttonBorderColor,\r\n                                            onChange: handleBorderColorChange,\r\n                                            label: __('Border Color', 'videolightboxforgutenberg'),\r\n                                        },\r\n                                        {\r\n                                            value: attributes.buttonBackgroundHoverColor,\r\n                                            onChange: handleBackgroundHoverColorChange,\r\n                                            label: __('Background Hover Color', 'videolightboxforgutenberg'),\r\n                                        },\r\n                                        {\r\n                                            value: attributes.buttonTextHoverColor,\r\n                                            onChange: handleTextHoverColorChange,\r\n                                            label: __('Text Hover Color', 'videolightboxforgutenberg'),\r\n                                        },\r\n                                        {\r\n                                            value: attributes.buttonBorderHoverColor,\r\n                                            onChange: handleBorderHoverColorChange,\r\n                                            label: __('Border Hover Color', 'videolightboxforgutenberg'),\r\n                                        },\r\n                                    ]}\r\n                                />\r\n                                {/*<PanelColorSettings\r\n                                    title={__('Button Text Color', 'videolightboxforgutenberg')}\r\n                                    colorSettings={[\r\n                                        {\r\n                                            value: attributes.buttonTextColor,\r\n                                            onChange: handleTextColorChange,\r\n                                            label: __('Select Button Text Color', 'videolightboxforgutenberg'),\r\n                                        },\r\n                                    ]}\r\n                                />*/}\r\n                            </PanelBody>\r\n                        )}\r\n\r\n                        {attributes.selection === 'media' && (\r\n                            <PanelBody title={__('Media Upload Settings', 'videolightboxforgutenberg')}>\r\n                                <ToggleControl\r\n                                    label={__('Play Icon', 'videolightboxforgutenberg')}\r\n                                    checked={attributes.additionalSettingsEnabled}\r\n                                    onChange={handleToggleChange}\r\n                                />\r\n\r\n                                {attributes.additionalSettingsEnabled && (\r\n                                    <div>\r\n                                        {attributes.iconImage ? (\r\n                                            <div>\r\n                                                <img src={attributes.iconImage} alt=\"Uploaded Icon\" />\r\n                                                <Button onClick={removeIcon}>Remove</Button>\r\n                                            </div>\r\n                                        ) : (\r\n                                            <MediaUpload\r\n                                                onSelect={onSelectIcon}\r\n                                                type=\"image\"\r\n                                                value={attributes.iconImage}\r\n                                                accept=\"image/jpeg,image/jpg,image/png,image/svg+xml\"\r\n                                                render={({ open }) => (\r\n                                                    <div>\r\n                                                        <Button\r\n                                                            icon=\"upload\"\r\n                                                            onClick={open}\r\n                                                            aria-label={__('Upload Icon', 'videolightboxforgutenberg')} >\r\n                                                            <span>{__('Upload Icon', 'videolightboxforgutenberg')}</span>\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                )}\r\n                                            />\r\n                                        )}\r\n\r\n                                        {errorMessagePlayIcon && <p style={{ color: 'red' }}>{errorMessagePlayIcon}</p>}\r\n\r\n                                    </div>\r\n                                )}\r\n\r\n                                <TextControl\r\n                                    label={__('Icon Size (in pixels)', 'videolightboxforgutenberg')}\r\n                                    value={attributes.iconImageSize}\r\n                                    onChange={handleIconSizeChange}\r\n                                />\r\n\r\n                                <SelectControl\r\n                                    label={__('Select Image Size', 'videolightboxforgutenberg')}\r\n                                    value={selectedSize}\r\n                                    options={imageSizes.map((size) => ({ label: size, value: size }))}\r\n                                    //onChange={(onSelectImageSize) => setSize(onSelectImageSize)}\r\n                                    //onChange={handleSizeChange}\r\n                                    onChange={(newSelectedSize) => setAttributes({ selectedSize: newSelectedSize })}\r\n                                />\r\n\r\n                                {/**\r\n                             * <SelectControl\r\n                                label={__('Select Image Size')}\r\n                                value={attributes.imageSize}\r\n                                options={[\r\n                                    { label: __('Thumbnail'), value: 'thumbnail' },\r\n                                    { label: __('Medium'), value: 'medium' },\r\n                                    { label: __('Large'), value: 'large' },\r\n                                    { label: __('Full'), value: 'full' },\r\n                                    // Add more size options as needed\r\n                                ]}\r\n                                onChange={handleImageSizeChange}\r\n                            />\r\n                             */}\r\n                            </PanelBody>\r\n                        )}\r\n\r\n                        <PanelBody title={__('Video Type Settings', 'videolightboxforgutenberg')}>\r\n                            <RadioControl\r\n                                label={__('Select Video Type', 'videolightboxforgutenberg')}\r\n                                selected={attributes.videoType}\r\n                                options={[\r\n                                    { label: 'Upload Video', value: 'uploadvideo' },\r\n                                    { label: 'Video Url', value: 'videourl' },\r\n                                    // Add more options as needed\r\n                                ]}\r\n                                onChange={handleVideoTypeChange}\r\n                            />\r\n\r\n                            {attributes.videoType === 'videourl' && (\r\n                                <>\r\n                                    <TextControl\r\n                                        label={__('Video URL', 'videolightboxforgutenberg')}\r\n                                        value={attributes.videoUrl}\r\n                                        onChange={handleVideoUrlChange}\r\n                                        isRequired={true}\r\n                                    />\r\n                                    \r\n                                </>\r\n                            )}\r\n\r\n                            {attributes.videoType === 'uploadvideo' && (\r\n                                <>\r\n                                    {attributes.video ? (\r\n\r\n                                        <>\r\n                                            <video src={attributes.video}></video>\r\n                                            <Button onClick={removeVideo}>Remove</Button>\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <MediaUpload\r\n                                                onSelect={onUploadVideo}\r\n                                                type=\"video\"\r\n                                                value={attributes.video}\r\n                                                render={({ open }) => (\r\n                                                    <Button onClick={open}>\r\n                                                        {__('Upload Video', 'videolightboxforgutenberg')}\r\n                                                    </Button>\r\n                                                )}\r\n                                            />\r\n                                        </>\r\n                                    )}\r\n\r\n                                    {errorMessageUploadVideo && <p style={{ color: 'red' }}>{errorMessageUploadVideo}</p>}\r\n\r\n                                </>\r\n                            )}\r\n\r\n                        </PanelBody>\r\n\r\n                        <PanelBody title={__('Video Lightbox Settings', 'videolightboxforgutenberg')}>\r\n                            <PanelColorSettings\r\n                                title={__('Lightbox Color', 'videolightboxforgutenberg')}\r\n                                colorSettings={[\r\n                                    {\r\n                                        value: attributes.videoLightboxColor,\r\n                                        onChange: handleColorChange,\r\n                                        label: __('Select Lightbox Color', 'videolightboxforgutenberg'),\r\n                                    },\r\n                                ]}\r\n                            />\r\n                            <RangeControl\r\n                                label={__('Lightbox Opacity', 'videolightboxforgutenberg')}\r\n                                value={attributes.videoLightboxOpacity}\r\n                                onChange={handleOpacityChange}\r\n                                min={0}\r\n                                max={1}\r\n                                step={0.1}\r\n                            />\r\n                            <RangeControl\r\n                                label={__('Lightbox Width', 'videolightboxforgutenberg')}\r\n                                value={attributes.videoLightboxWidth}\r\n                                onChange={handleWidthChange}\r\n                                min={320}\r\n                                max={1920}\r\n                                step={10}\r\n                            />\r\n                        </PanelBody>\r\n\r\n                    </Panel>\r\n                </InspectorControls>\r\n\r\n                <div className=\"media-block\">\r\n                    {attributes.selection === 'button' && (\r\n                        <Button className=\"button-open-vl\"\r\n                            onClick={() => setAttributes({ selection: 'button' })}\r\n                            style={{ /*\r\n                                backgroundColor: attributes.buttonBackgroundColor,\r\n                                color: attributes.buttonTextColor,*/\r\n                            }}\r\n                        >\r\n                            {attributes.buttonText}\r\n                        </Button>\r\n                    )}\r\n\r\n                    {attributes.selection === 'media' && selectedSize && (\r\n                        <div>\r\n                            {/*attributes.image ? (\r\n                                <div>\r\n                                    {\r\n                                        selectedSize\r\n                                            ? (<img src={attributes.image.sizes[selectedSize].url} alt={(attributes.image.alt ? attributes.image.alt : '')} />)\r\n                                            : (<img src={attributes.image.sizes.medium.url} alt={(attributes.image.alt ? attributes.image.alt : '')} />)\r\n                                    }\r\n\r\n                                    <Button onClick={removeImage}>Remove</Button>\r\n                                </div>\r\n                            ) : (\r\n                                <MediaUpload\r\n                                    onSelect={onSelectImage}\r\n                                    type=\"image\"\r\n                                    value={attributes.image && attributes.image.id}\r\n                                    accept=\"image/jpeg,image/jpg,image/png\"\r\n                                    render={({ open }) => (\r\n                                        <Button onClick={open}>\r\n                                            {__('Upload Image')}\r\n                                        </Button>\r\n                                    )}\r\n                                />\r\n                                    )*/}\r\n\r\n                            <MediaUploadCheck>\r\n                                <MediaUpload\r\n                                    onSelect={(image) => onSelectImage(image)}\r\n                                    allowedTypes={['image']}\r\n                                    value={attributes.image && attributes.image.id}\r\n                                    render={({ open }) => (\r\n                                        <>\r\n                                            {attributes.image ? (\r\n                                                <div className=\"video-thumbnail\">\r\n                                                    <img src={attributes.image.sizes[selectedSize].url} alt={(attributes.image.alt ? attributes.image.alt : '')} />\r\n                                                    <Button className=\"button-remove\" onClick={removeImage}>\r\n                                                        <svg viewBox=\"0 0 24 24\"><g><path d=\"M13 4H8.8C7.11984 4 6.27976 4 5.63803 4.32698C5.07354 4.6146 4.6146 5.07354 4.32698 5.63803C4 6.27976 4 7.11984 4 8.8V15.2C4 16.8802 4 17.7202 4.32698 18.362C4.6146 18.9265 5.07354 19.3854 5.63803 19.673C6.27976 20 7.11984 20 8.8 20H15.2C16.8802 20 17.7202 20 18.362 19.673C18.9265 19.3854 19.3854 18.9265 19.673 18.362C20 17.7202 20 16.8802 20 15.2V11\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path> <path d=\"M4 16L8.29289 11.7071C8.68342 11.3166 9.31658 11.3166 9.70711 11.7071L13 15M13 15L15.7929 12.2071C16.1834 11.8166 16.8166 11.8166 17.2071 12.2071L20 15M13 15L15.25 17.25\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path> <path d=\"M17 3L19 5M21 7L19 5M19 5L21 3M19 5L17 7\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path> </g></svg>\r\n                                                        {/* <svg fill=\"#000000\" width=\"32\" viewBox=\"0 0 52 52\"><g><path d=\"M20,37.5c0-0.8-0.7-1.5-1.5-1.5h-15C2.7,36,2,36.7,2,37.5v11C2,49.3,2.7,50,3.5,50h15c0.8,0,1.5-0.7,1.5-1.5 V37.5z\"></path> <path d=\"M8.1,22H3.2c-1,0-1.5,0.9-0.9,1.4l8,8.3c0.4,0.3,1,0.3,1.4,0l8-8.3c0.6-0.6,0.1-1.4-0.9-1.4h-4.7 c0-5,4.9-10,9.9-10V6C15,6,8.1,13,8.1,22z\"></path> <path d=\"M41.8,20.3c-0.4-0.3-1-0.3-1.4,0l-8,8.3c-0.6,0.6-0.1,1.4,0.9,1.4h4.8c0,6-4.1,10-10.1,10v6 c9,0,16.1-7,16.1-16H49c1,0,1.5-0.9,0.9-1.4L41.8,20.3z\"></path> <path d=\"M50,3.5C50,2.7,49.3,2,48.5,2h-15C32.7,2,32,2.7,32,3.5v11c0,0.8,0.7,1.5,1.5,1.5h15c0.8,0,1.5-0.7,1.5-1.5 V3.5z\"></path></g></svg> */}\r\n                                                    </Button>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <Button className=\"upload-image\" onClick={open}>\r\n                                                    <svg viewBox=\"0 0 24 24\" width=\"24\" fill=\"#000000\"><g> <rect x=\"0\" fill=\"none\" width=\"24\" height=\"24\"></rect> <g> <path d=\"M23 4v2h-3v3h-2V6h-3V4h3V1h2v3h3zm-8.5 7c.828 0 1.5-.672 1.5-1.5S15.328 8 14.5 8 13 8.672 13 9.5s.672 1.5 1.5 1.5zm3.5 3.234l-.513-.57c-.794-.885-2.18-.885-2.976 0l-.655.73L9 9l-3 3.333V6h7V4H6c-1.105 0-2 .895-2 2v12c0 1.105.895 2 2 2h12c1.105 0 2-.895 2-2v-7h-2v3.234z\"></path> </g> </g></svg>\r\n                                                    {__('upload Image', 'videolightboxforgutenberg')}\r\n                                                </Button>\r\n                                            )}\r\n                                        </>\r\n                                    )}\r\n                                />\r\n                            </MediaUploadCheck>\r\n\r\n                            {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n\r\n                        </div>\r\n                    )}\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    },\r\n\r\n    /**\r\n     * Main Save Structure\r\n     * @param {*} param0\r\n     * @returns\r\n     */\r\n    save: function ({ attributes }) {\r\n        /** Get constant values contains values to save */\r\n        const { selection, image, buttonText, buttonBorderWidth, buttonBackgroundColor, buttonBackgroundHoverColor, buttonTextHoverColor, buttonBorderHoverColor, videoLightboxWidth, videoLightboxColor, buttonTextColor, buttonBorderColor, videoType, videoUrl, video, iconImage, iconImageSize, imageSize, selectedSize, videoLightboxOpacity } = attributes;\r\n        const buttonContent = buttonText.trim() !== '' ? buttonText : 'Open Video';\r\n        //const videoContent = videoUrl != '' ? videoUrl : video;\r\n\r\n        const customStyles = `\r\n      .video-lightbox-fancy .fancybox__backdrop {\r\n        background: ${videoLightboxColor};\r\n        opacity: ${videoLightboxOpacity};\r\n      }\r\n      .video-lightbox-fancy .fancybox__content {\r\n        max-width: ${videoLightboxWidth}px;\r\n      }\r\n      .button-open-vl {\r\n        background-color: ${buttonBackgroundColor};\r\n        color: ${buttonTextColor};\r\n        border: ${buttonBorderWidth}px solid ${buttonBorderColor};\r\n      }\r\n      .button-open-vl:hover {\r\n        background-color: ${buttonBackgroundHoverColor};\r\n        color: ${buttonTextHoverColor};\r\n        border: ${buttonBorderWidth}px solid ${buttonBorderHoverColor};\r\n      }\r\n      /* Add more styles as needed */\r\n    `;\r\n\r\n        return (\r\n            /** Structure to show for update data */\r\n            <>\r\n                {<style>\r\n                    {customStyles}\r\n                </style>}\r\n                {/**\r\n                *  <ul>\r\n                    {Object.keys(attributes).map((key) => (\r\n                        <li key={key}>\r\n                            <strong>{key}:</strong> {attributes[key]}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                */}\r\n                {attributes.selection === 'button' ? (\r\n                    <>\r\n                        <button class=\"button-open-vl\" type=\"button\" data-fancybox=\"video-lightbox\"\r\n                            style={{/* backgroundColor: buttonBackgroundColor, textColor: buttonTextColor, borderWidth: buttonBorderWidth */}}\r\n                        >\r\n                            {buttonContent}\r\n                        </button>\r\n                        <div class=\"hidden\" >\r\n                            <video src={video}></video>\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                        attributes.selection === 'media' && selectedSize && image && (\r\n                            <a data-fancybox=\"video-lightbox\" href={video} >                                                               \r\n                                <img src={attributes.image.sizes[selectedSize].url} alt={(attributes.image.alt ? attributes.image.alt : '')} />\r\n                            </a>\r\n                        )\r\n                )}\r\n\r\n                \r\n                {/*attributes.image && selectedSize && (\r\n                    <div>\r\n                        {`${selectedSize}EEE`}\r\n                        {\r\n                            selectedSize\r\n                                ? (<img src={attributes.image.sizes[selectedSize].url} alt={(attributes.image.alt ? attributes.image.alt : '')} />)\r\n                                : (<img src={attributes.image.sizes.medium.url} alt={(attributes.image.alt ? attributes.image.alt : '')} />)\r\n                        }\r\n                    </div>\r\n                    )*/}\r\n\r\n            </>\r\n        );\r\n    },\r\n});\r\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isFQDN;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_fqdn_options = {\n  require_tld: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_numeric_tld: false,\n  allow_wildcard: false,\n  ignore_max_length: false\n};\n\nfunction isFQDN(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, default_fqdn_options);\n  /* Remove the optional trailing dot before checking validity */\n\n  if (options.allow_trailing_dot && str[str.length - 1] === '.') {\n    str = str.substring(0, str.length - 1);\n  }\n  /* Remove the optional wildcard before checking validity */\n\n\n  if (options.allow_wildcard === true && str.indexOf('*.') === 0) {\n    str = str.substring(2);\n  }\n\n  var parts = str.split('.');\n  var tld = parts[parts.length - 1];\n\n  if (options.require_tld) {\n    // disallow fqdns without tld\n    if (parts.length < 2) {\n      return false;\n    }\n\n    if (!options.allow_numeric_tld && !/^([a-z\\u00A1-\\u00A8\\u00AA-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {\n      return false;\n    } // disallow spaces\n\n\n    if (/\\s/.test(tld)) {\n      return false;\n    }\n  } // reject numeric TLDs\n\n\n  if (!options.allow_numeric_tld && /^\\d+$/.test(tld)) {\n    return false;\n  }\n\n  return parts.every(function (part) {\n    if (part.length > 63 && !options.ignore_max_length) {\n      return false;\n    }\n\n    if (!/^[a-z_\\u00a1-\\uffff0-9-]+$/i.test(part)) {\n      return false;\n    } // disallow full-width chars\n\n\n    if (/[\\uff01-\\uff5e]/.test(part)) {\n      return false;\n    } // disallow parts starting or ending with hyphen\n\n\n    if (/^-|-$/.test(part)) {\n      return false;\n    }\n\n    if (!options.allow_underscores && /_/.test(part)) {\n      return false;\n    }\n\n    return true;\n  });\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIP;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n11.3.  Examples\n\n   The following addresses\n\n             fe80::1234 (on the 1st link of the node)\n             ff02::5678 (on the 5th link of the node)\n             ff08::9abc (on the 10th organization of the node)\n\n   would be represented as follows:\n\n             fe80::1234%1\n             ff02::5678%5\n             ff08::9abc%10\n\n   (Here we assume a natural translation from a zone index to the\n   <zone_id> part, where the Nth zone of any scope is translated into\n   \"N\".)\n\n   If we use interface names as <zone_id>, those addresses could also be\n   represented as follows:\n\n            fe80::1234%ne0\n            ff02::5678%pvc1.3\n            ff08::9abc%interface10\n\n   where the interface \"ne0\" belongs to the 1st link, \"pvc1.3\" belongs\n   to the 5th link, and \"interface10\" belongs to the 10th organization.\n * * */\nvar IPv4SegmentFormat = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\nvar IPv4AddressFormat = \"(\".concat(IPv4SegmentFormat, \"[.]){3}\").concat(IPv4SegmentFormat);\nvar IPv4AddressRegExp = new RegExp(\"^\".concat(IPv4AddressFormat, \"$\"));\nvar IPv6SegmentFormat = '(?:[0-9a-fA-F]{1,4})';\nvar IPv6AddressRegExp = new RegExp('^(' + \"(?:\".concat(IPv6SegmentFormat, \":){7}(?:\").concat(IPv6SegmentFormat, \"|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){6}(?:\").concat(IPv4AddressFormat, \"|:\").concat(IPv6SegmentFormat, \"|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){5}(?::\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,2}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){4}(?:(:\").concat(IPv6SegmentFormat, \"){0,1}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,3}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){3}(?:(:\").concat(IPv6SegmentFormat, \"){0,2}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,4}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){2}(?:(:\").concat(IPv6SegmentFormat, \"){0,3}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,5}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){1}(?:(:\").concat(IPv6SegmentFormat, \"){0,4}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,6}|:)|\") + \"(?::((?::\".concat(IPv6SegmentFormat, \"){0,5}:\").concat(IPv4AddressFormat, \"|(?::\").concat(IPv6SegmentFormat, \"){1,7}|:))\") + ')(%[0-9a-zA-Z-.:]{1,})?$');\n\nfunction isIP(str) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  (0, _assertString.default)(str);\n  version = String(version);\n\n  if (!version) {\n    return isIP(str, 4) || isIP(str, 6);\n  }\n\n  if (version === '4') {\n    return IPv4AddressRegExp.test(str);\n  }\n\n  if (version === '6') {\n    return IPv6AddressRegExp.test(str);\n  }\n\n  return false;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isURL;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isFQDN = _interopRequireDefault(require(\"./isFQDN\"));\n\nvar _isIP = _interopRequireDefault(require(\"./isIP\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/*\noptions for isURL method\n\nrequire_protocol - if set as true isURL will return false if protocol is not present in the URL\nrequire_valid_protocol - isURL will check if the URL's protocol is present in the protocols option\nprotocols - valid protocols can be modified with this option\nrequire_host - if set as false isURL will not check if host is present in the URL\nrequire_port - if set as true isURL will check if port is present in the URL\nallow_protocol_relative_urls - if set as true protocol relative URLs will be allowed\nvalidate_length - if set as false isURL will skip string length validation (IE maximum is 2083)\n\n*/\nvar default_url_options = {\n  protocols: ['http', 'https', 'ftp'],\n  require_tld: true,\n  require_protocol: false,\n  require_host: true,\n  require_port: false,\n  require_valid_protocol: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_protocol_relative_urls: false,\n  allow_fragments: true,\n  allow_query_components: true,\n  validate_length: true\n};\nvar wrapped_ipv6 = /^\\[([^\\]]+)\\](?::([0-9]+))?$/;\n\nfunction isRegExp(obj) {\n  return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\n\nfunction checkHost(host, matches) {\n  for (var i = 0; i < matches.length; i++) {\n    var match = matches[i];\n\n    if (host === match || isRegExp(match) && match.test(host)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isURL(url, options) {\n  (0, _assertString.default)(url);\n\n  if (!url || /[\\s<>]/.test(url)) {\n    return false;\n  }\n\n  if (url.indexOf('mailto:') === 0) {\n    return false;\n  }\n\n  options = (0, _merge.default)(options, default_url_options);\n\n  if (options.validate_length && url.length >= 2083) {\n    return false;\n  }\n\n  if (!options.allow_fragments && url.includes('#')) {\n    return false;\n  }\n\n  if (!options.allow_query_components && (url.includes('?') || url.includes('&'))) {\n    return false;\n  }\n\n  var protocol, auth, host, hostname, port, port_str, split, ipv6;\n  split = url.split('#');\n  url = split.shift();\n  split = url.split('?');\n  url = split.shift();\n  split = url.split('://');\n\n  if (split.length > 1) {\n    protocol = split.shift().toLowerCase();\n\n    if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {\n      return false;\n    }\n  } else if (options.require_protocol) {\n    return false;\n  } else if (url.slice(0, 2) === '//') {\n    if (!options.allow_protocol_relative_urls) {\n      return false;\n    }\n\n    split[0] = url.slice(2);\n  }\n\n  url = split.join('://');\n\n  if (url === '') {\n    return false;\n  }\n\n  split = url.split('/');\n  url = split.shift();\n\n  if (url === '' && !options.require_host) {\n    return true;\n  }\n\n  split = url.split('@');\n\n  if (split.length > 1) {\n    if (options.disallow_auth) {\n      return false;\n    }\n\n    if (split[0] === '') {\n      return false;\n    }\n\n    auth = split.shift();\n\n    if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {\n      return false;\n    }\n\n    var _auth$split = auth.split(':'),\n        _auth$split2 = _slicedToArray(_auth$split, 2),\n        user = _auth$split2[0],\n        password = _auth$split2[1];\n\n    if (user === '' && password === '') {\n      return false;\n    }\n  }\n\n  hostname = split.join('@');\n  port_str = null;\n  ipv6 = null;\n  var ipv6_match = hostname.match(wrapped_ipv6);\n\n  if (ipv6_match) {\n    host = '';\n    ipv6 = ipv6_match[1];\n    port_str = ipv6_match[2] || null;\n  } else {\n    split = hostname.split(':');\n    host = split.shift();\n\n    if (split.length) {\n      port_str = split.join(':');\n    }\n  }\n\n  if (port_str !== null && port_str.length > 0) {\n    port = parseInt(port_str, 10);\n\n    if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {\n      return false;\n    }\n  } else if (options.require_port) {\n    return false;\n  }\n\n  if (options.host_whitelist) {\n    return checkHost(host, options.host_whitelist);\n  }\n\n  if (host === '' && !options.require_host) {\n    return true;\n  }\n\n  if (!(0, _isIP.default)(host) && !(0, _isFQDN.default)(host, options) && (!ipv6 || !(0, _isIP.default)(ipv6, 6))) {\n    return false;\n  }\n\n  host = host || ipv6;\n\n  if (options.host_blacklist && checkHost(host, options.host_blacklist)) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assertString;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction assertString(input) {\n  var isString = typeof input === 'string' || input instanceof String;\n\n  if (!isString) {\n    var invalidType = _typeof(input);\n\n    if (input === null) invalidType = 'null';else if (invalidType === 'object') invalidType = input.constructor.name;\n    throw new TypeError(\"Expected a string but received a \".concat(invalidType));\n  }\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = merge;\n\nfunction merge() {\n  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var defaults = arguments.length > 1 ? arguments[1] : undefined;\n\n  for (var key in defaults) {\n    if (typeof obj[key] === 'undefined') {\n      obj[key] = defaults[key];\n    }\n  }\n\n  return obj;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"notices\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"index\": 0,\n\t\"./style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunkmy_first_block\"] = globalThis[\"webpackChunkmy_first_block\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"./style-index\"], () => (__webpack_require__(\"./src/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["__","MediaUploadCheck","MediaUpload","InspectorControls","PanelColorSettings","useBlockProps","registerBlockType","Button","TextControl","RadioControl","Panel","PanelBody","SelectControl","ToggleControl","IconButton","RangeControl","select","React","useRef","isURL","createErrorNotice","withDispatch","title","icon","category","attributes","image","type","default","selection","buttonText","buttonBackgroundColor","buttonTextColor","buttonBorderColor","buttonBackgroundHoverColor","buttonTextHoverColor","buttonBorderHoverColor","buttonBorderWidth","imageSize","additionalSettingsEnabled","iconImage","iconImageSize","videoLightboxColor","videoLightboxOpacity","videoLightboxWidth","videoType","selectedSize","videoUrl","video","edit","setAttributes","noticeOperations","useState","wp","element","errorMessage","setErrorMessage","errorMessagePlayIcon","setErrorMessagePlayIcon","errorMessageUploadVideo","setErrorMessageUploadVideo","val","setVal","err","setErr","console","log","imageSizes","getEditorSettings","map","size","slug","onSelectImage","mime","removeImage","onSelectIcon","newIcon","url","removeIcon","handleSelectionChange","newSelection","handleTextChange","newText","handleBackgroundColorChange","color","handleTextColorChange","handleBorderColorChange","handleBackgroundHoverColorChange","handleTextHoverColorChange","handleBorderHoverColorChange","handleButtonBorderWidth","value","handleImageSizeChange","newSize","handleToggleChange","checked","handleIconSizeChange","handleColorChange","handleOpacityChange","handleWidthChange","handleVideoTypeChange","newType","handleVideoUrlChange","newUrl","validate","onUploadVideo","newVideo","removeVideo","saveBlock","caption","notice","isDismissible","createNotice","customStyles","createElement","className","selected","options","label","onChange","min","max","step","colorSettings","src","alt","onClick","onSelect","accept","render","open","style","newSelectedSize","Fragment","isRequired","allowedTypes","id","sizes","viewBox","d","stroke","width","fill","x","height","save","buttonContent","trim","class","href"],"sourceRoot":""}