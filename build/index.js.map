{"version":3,"file":"index.js","mappings":"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","sources":["webpack://my-first-block/./src/VideoLightboxBlock.js","webpack://my-first-block/external window \"React\"","webpack://my-first-block/external window [\"wp\",\"blocks\"]","webpack://my-first-block/external window [\"wp\",\"components\"]","webpack://my-first-block/external window [\"wp\",\"editor\"]","webpack://my-first-block/external window [\"wp\",\"i18n\"]","webpack://my-first-block/webpack/bootstrap","webpack://my-first-block/webpack/runtime/compat get default export","webpack://my-first-block/webpack/runtime/define property getters","webpack://my-first-block/webpack/runtime/hasOwnProperty shorthand","webpack://my-first-block/webpack/runtime/make namespace object","webpack://my-first-block/./src/index.js"],"sourcesContent":["const { registerBlockType } = wp.blocks;\nconst { Button, MediaUpload } = wp.editor;\nconst { __ } = wp.i18n;\nconst { RadioControl } = wp.components;\n\nregisterBlockType('your-plugin/your-block', {\n    title: __('Custom Block with Image Upload'),\n    icon: 'smiley',\n    category: 'common',\n    attributes: {\n        image: {\n            type: 'string',\n            default: null,\n        },\n        selection: {\n            type: 'string',\n            default: 'button',\n        },\n    },\n    edit: ({ attributes, setAttributes }) => {\n        const onSelectImage = (newImage) => {\n            setAttributes({ image: newImage.sizes.full.url });\n        };\n\n        const handleSelectionChange = (newSelection) => {\n            setAttributes({ selection: newSelection });\n        };\n\n        let control = null;\n\n        if (attributes.selection === 'button') {\n            control = (\n                <Button onClick={() => setAttributes({ selection: 'media' })}>\n                    {__('Upload Image')}\n                </Button>\n            );\n        } else if (attributes.selection === 'media') {\n            control = (\n                <MediaUpload\n                    onSelect={onSelectImage}\n                    type=\"image\"\n                    value={attributes.image}\n                    render={({ open }) => (\n                        <Button onClick={open}>\n                            {__('Select Image')}\n                        </Button>\n                    )}\n                />\n            );\n        }\n\n        return (\n            <div className=\"custom-block\">\n                <RadioControl\n                    label={__('Select Option')}\n                    selected={attributes.selection}\n                    options={[\n                        { label: __('Button'), value: 'button' },\n                        { label: __('Media Upload'), value: 'media' },\n                    ]}\n                    onChange={handleSelectionChange}\n                />\n                {control}\n                {attributes.image && (\n                    <img src={attributes.image} alt=\"Uploaded\" />\n                )}\n            </div>\n        );\n    },\n    save: ({ attributes }) => {\n        return (\n            <div>\n                {attributes.image && (\n                    <img src={attributes.image} alt=\"Uploaded\" />\n                )}\n            </div>\n        );\n    },\n});\n","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"editor\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport { Button, Modal, TextControl, RadioControl, Panel, PanelBody, SelectControl, ToggleControl, IconButton, RangeControl } from '@wordpress/components';\nimport { MediaUpload, InspectorControls, PanelColorSettings } from '@wordpress/editor';\nimport VideoLightboxBlock from './VideoLightboxBlock';\nimport { __ } from '@wordpress/i18n';\n\nregisterBlockType('my-first-block/video-lightbox', {\n\ttitle: __('Video Lightbox'),\n    icon: 'video-alt3',\n    category: 'common',\n    attributes: {\n        image: {\n            type: 'string',\n            default: null,\n        },\n        selection: {\n            type: 'string',\n            default: 'button',\n        },\n\t\tbuttonText: {\n            type: 'string',\n            default: 'Button Text',\n        },\n        buttonBackgroundColor: {\n            type: 'string',\n            default: '#0073aa',\n        },\n\t\tbuttonTextColor: {\n            type: 'string',\n            default: '#ffffff',\n        },\n\t\timageSize: {\n            type: 'string',\n            default: 'full', // Default image size\n        },\n\t\tadditionalSettingsEnabled: {\n            type: 'boolean',\n            default: false,\n        },\n\t\ticonImage: {\n            type: 'string',\n            default: null,\n        },\n\t\ticonImageSize: {\n            type: 'string',\n            default: '12', // Default icon size in pixels\n        },\n\t\tvideoLightboxColor: {\n            type: 'string',\n            default: '#000000', // Default color for video lightbox\n        },\n        videoLightboxOpacity: {\n            type: 'number',\n            default: 0.8, // Default opacity for video lightbox\n        },\n        videoLightboxWidth: {\n            type: 'number',\n            default: 640, // Default width for video lightbox\n        },\n    },\n\tedit: ({ attributes, setAttributes }) => {\n        const onSelectImage = (newImage) => {\n            setAttributes({ image: newImage.sizes.full.url });\n        };\n\n\t\tconst onSelectIcon = (newIcon) => {\n            setAttributes({ iconImage: newIcon.sizes.full.url });\n        };\n\n        const handleSelectionChange = (newSelection) => {\n            setAttributes({ selection: newSelection });\n        };\n\n\t\tconst handleTextChange = (newText) => {\n            setAttributes({ buttonText: newText });\n        };\n\n        const handleBackgroundColorChange = (color) => {\n            setAttributes({ buttonBackgroundColor: color });\n        };\n\n\t\tconst handleTextColorChange = (color) => {\n            setAttributes({ buttonTextColor: color });\n        };\n\n\t\tconst handleImageSizeChange = (newSize) => {\n            setAttributes({ imageSize: newSize });\n        };\n\n\t\tconst handleToggleChange = (checked) => {\n            setAttributes({ additionalSettingsEnabled: checked });\n        };\n\n\t\tconst handleIconSizeChange = (newSize) => {\n            setAttributes({ iconImageSize: newSize });\n        };\n\n\t\tconst handleColorChange = (color) => {\n            setAttributes({ videoLightboxColor: color });\n        };\n\n        const handleOpacityChange = (value) => {\n            setAttributes({ videoLightboxOpacity: value });\n        };\n\n        const handleWidthChange = (value) => {\n            setAttributes({ videoLightboxWidth: value });\n        };\n\n\t\treturn (\n            <div>\n\t\t\t\t<RadioControl\n\t\t\t\t\tlabel={__('Select Option for Video Popup')}\n\t\t\t\t\tselected={attributes.selection}\n\t\t\t\t\toptions={[\n\t\t\t\t\t\t{ label: __('Button'), value: 'button' },\n\t\t\t\t\t\t{ label: __('Media Upload'), value: 'media' },\n\t\t\t\t\t]}\n\t\t\t\t\tonChange={handleSelectionChange}\n\t\t\t\t/>\n                <InspectorControls>\n\t\t\t\t\t<Panel>\n                    {attributes.selection === 'button' && (\n                        <PanelBody title={__('Button Settings')}>\n                            <TextControl\n                                label={__('Button Text')}\n                                value={attributes.buttonText}\n                                onChange={handleTextChange}\n                            />\n                            <PanelColorSettings\n                                title={__('Button Background Color')}\n                                colorSettings={[\n                                    {\n                                        value: attributes.buttonBackgroundColor,\n                                        onChange: handleBackgroundColorChange,\n                                        label: __('Select Button Background Color'),\n                                    },\n                                ]}\n                            />\n                            <PanelColorSettings\n                                title={__('Button Text Color')}\n                                colorSettings={[\n                                    {\n                                        value: attributes.buttonTextColor,\n                                        onChange: handleTextColorChange,\n                                        label: __('Select Button Text Color'),\n                                    },\n                                ]}\n                            />\n                        </PanelBody>\n                    )}\n\n\n                    {attributes.selection === 'media' && (\n\t\t\t\t\t\t<PanelBody title={__('Media Upload Settings')}>\n\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\tlabel={__('Play Icon')}\n\t\t\t\t\t\t\t\tchecked={attributes.additionalSettingsEnabled}\n\t\t\t\t\t\t\t\tonChange={handleToggleChange}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t{attributes.additionalSettingsEnabled && (\n\t\t\t\t\t\t\t\t<div>\n                                    <MediaUpload\n                                        onSelect={onSelectIcon}\n                                        type=\"image\"\n                                        value={attributes.iconImage}\n                                        render={({ open }) => (\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t                        <IconButton\n\t\t\t\t\t\t                            icon=\"upload\"\n\t\t\t\t\t\t                            onClick={open}\n\t\t\t\t\t\t                            aria-label={__('Upload Icon')}\n\t\t\t\t\t\t                        />\n\t\t\t\t\t\t                        <span>{__('Upload Icon')}</span>\n\t\t\t\t\t\t                    </div>\n                                        )}\n                                    />\n                                    {attributes.iconImage && (\n                                        <img src={attributes.iconImage} alt=\"Icon Uploaded\" />\n                                    )}\n                                </div>\n                            )}\n\n\t\t\t\t\t\t\t<TextControl\n                                label={__('Icon Size (in pixels)')}\n                                value={attributes.iconImageSize}\n                                onChange={handleIconSizeChange}\n                            />\n\n                            <SelectControl\n                                label={__('Select Image Size')}\n                                value={attributes.imageSize}\n                                options={[\n                                    { label: __('Thumbnail'), value: 'thumbnail' },\n                                    { label: __('Medium'), value: 'medium' },\n                                    { label: __('Large'), value: 'large' },\n                                    { label: __('Full'), value: 'full' },\n                                    // Add more size options as needed\n                                ]}\n                                onChange={handleImageSizeChange}\n                            />\n\n                        </PanelBody>\n                    )}\n\t\t\t\t\t<PanelBody title={__('Video Lightbox Settings')}>\n                        <PanelColorSettings\n                            title={__('Lightbox Color')}\n                            colorSettings={[\n                                {\n                                    value: attributes.videoLightboxColor,\n                                    onChange: handleColorChange,\n                                    label: __('Select Lightbox Color'),\n                                },\n                            ]}\n                        />\n                        <RangeControl\n                            label={__('Lightbox Opacity')}\n                            value={attributes.videoLightboxOpacity}\n                            onChange={handleOpacityChange}\n                            min={0}\n                            max={1}\n                            step={0.1}\n                        />\n                        <RangeControl\n                            label={__('Lightbox Width')}\n                            value={attributes.videoLightboxWidth}\n                            onChange={handleWidthChange}\n                            min={320}\n                            max={1920}\n                            step={10}\n                        />\n                        </PanelBody>\n\n\t\t\t\t\t</Panel>\n                </InspectorControls>\n\n\n                <div className=\"custom-block\">\n                    {attributes.selection === 'button' && (\n                        <Button\n                            onClick={() => setAttributes({ selection: 'media' })}\n                            style={{\n                                backgroundColor: attributes.buttonBackgroundColor,\n                                color: attributes.buttonTextColor,\n                            }}\n                        >\n                            {attributes.buttonText}\n                        </Button>\n                    )}\n                    {attributes.selection === 'media' && (\n                        <MediaUpload\n                            onSelect={onSelectImage}\n                            type=\"image\"\n                            value={attributes.image}\n                            render={({ open }) => (\n                                <Button onClick={open}>\n                                    {__('Upload Image')}\n                                </Button>\n                            )}\n                        />\n                    )}\n                    {attributes.image && attributes.selection === 'media' && (\n                        <img src={attributes.image} alt=\"Uploaded\" />\n                    )}\n                </div>\n            </div>\n        );\n    },\n    save: ({ attributes }) => {\n\n\t\tconst { selection, buttonText, buttonBackgroundColor, buttonTextColor } = attributes;\n\n        return (\n            <div>\n\n\n                {attributes.image && (\n                    <img src={attributes.image} alt=\"Uploaded\" />\n                )}\n            </div>\n        );\n    },\n});\n"],"names":["registerBlockType","wp","blocks","Button","MediaUpload","editor","__","i18n","RadioControl","components","title","icon","category","attributes","image","type","default","selection","edit","setAttributes","onSelectImage","newImage","sizes","full","url","handleSelectionChange","newSelection","control","createElement","onClick","onSelect","value","render","open","className","label","selected","options","onChange","src","alt","save","Modal","TextControl","Panel","PanelBody","SelectControl","ToggleControl","IconButton","RangeControl","InspectorControls","PanelColorSettings","VideoLightboxBlock","buttonText","buttonBackgroundColor","buttonTextColor","imageSize","additionalSettingsEnabled","iconImage","iconImageSize","videoLightboxColor","videoLightboxOpacity","videoLightboxWidth","onSelectIcon","newIcon","handleTextChange","newText","handleBackgroundColorChange","color","handleTextColorChange","handleImageSizeChange","newSize","handleToggleChange","checked","handleIconSizeChange","handleColorChange","handleOpacityChange","handleWidthChange","colorSettings","min","max","step","style","backgroundColor"],"sourceRoot":""}